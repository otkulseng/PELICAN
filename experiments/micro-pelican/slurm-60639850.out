2024-05-29 00:59:10.632172: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-05-29 00:59:10.636988: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 00:59:10.780349: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 00:59:11.335564: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 00:59:13.631812: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 00:59:29.112999: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 1)      │             8 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2_1 (Lineq2v2)           │ (None, 32, 32, 16)     │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 32, 32, 2)      │            34 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 4)              │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 5)              │            25 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 67 (268.00 B)
 Trainable params: 67 (268.00 B)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/140 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  1%|          | 1/140 [04:19<10:01:14, 259.53s/epoch, accuracy=0.372, loss=1.46, val_accuracy=0.518, val_loss=1.25]  1%|▏         | 2/140 [08:33<9:48:47, 255.99s/epoch, accuracy=0.598, loss=1.15, val_accuracy=0.607, val_loss=1.1]    2%|▏         | 3/140 [12:49<9:45:15, 256.32s/epoch, accuracy=0.611, loss=1.08, val_accuracy=0.611, val_loss=1.08]  3%|▎         | 4/140 [17:06<9:41:30, 256.55s/epoch, accuracy=0.615, loss=1.06, val_accuracy=0.614, val_loss=1.06]  4%|▎         | 5/140 [21:19<9:34:30, 255.34s/epoch, accuracy=0.62, loss=1.04, val_accuracy=0.62, val_loss=1.04]    4%|▍         | 6/140 [25:35<9:30:28, 255.44s/epoch, accuracy=0.625, loss=1.04, val_accuracy=0.625, val_loss=1.04]  5%|▌         | 7/140 [29:51<9:26:39, 255.63s/epoch, accuracy=0.627, loss=1.03, val_accuracy=0.625, val_loss=1.03]  6%|▌         | 8/140 [34:07<9:22:21, 255.62s/epoch, accuracy=0.628, loss=1.03, val_accuracy=0.626, val_loss=1.03]  6%|▋         | 9/140 [38:23<9:18:23, 255.75s/epoch, accuracy=0.629, loss=1.03, val_accuracy=0.628, val_loss=1.03]  7%|▋         | 10/140 [42:40<9:15:17, 256.29s/epoch, accuracy=0.629, loss=1.03, val_accuracy=0.629, val_loss=1.03]  8%|▊         | 11/140 [46:54<9:09:43, 255.68s/epoch, accuracy=0.63, loss=1.03, val_accuracy=0.628, val_loss=1.03]   9%|▊         | 12/140 [51:11<9:06:04, 255.97s/epoch, accuracy=0.63, loss=1.03, val_accuracy=0.629, val_loss=1.03]  9%|▉         | 13/140 [55:27<9:01:47, 255.96s/epoch, accuracy=0.631, loss=1.03, val_accuracy=0.629, val_loss=1.03] 10%|█         | 14/140 [59:41<8:56:29, 255.47s/epoch, accuracy=0.631, loss=1.03, val_accuracy=0.631, val_loss=1.03] 11%|█         | 15/140 [1:03:57<8:52:20, 255.52s/epoch, accuracy=0.631, loss=1.02, val_accuracy=0.629, val_loss=1.03] 11%|█▏        | 16/140 [1:08:14<8:48:47, 255.86s/epoch, accuracy=0.632, loss=1.02, val_accuracy=0.631, val_loss=1.02] 12%|█▏        | 17/140 [1:12:29<8:43:58, 255.60s/epoch, accuracy=0.632, loss=1.02, val_accuracy=0.632, val_loss=1.02] 13%|█▎        | 18/140 [1:16:45<8:40:10, 255.82s/epoch, accuracy=0.633, loss=1.02, val_accuracy=0.632, val_loss=1.02] 14%|█▎        | 19/140 [1:21:01<8:35:55, 255.83s/epoch, accuracy=0.635, loss=1.01, val_accuracy=0.635, val_loss=1.02] 14%|█▍        | 20/140 [1:25:15<8:30:49, 255.42s/epoch, accuracy=0.636, loss=1.01, val_accuracy=0.634, val_loss=1.02] 15%|█▌        | 21/140 [1:29:32<8:27:04, 255.67s/epoch, accuracy=0.637, loss=1.01, val_accuracy=0.638, val_loss=1.01] 16%|█▌        | 22/140 [1:33:48<8:23:24, 255.97s/epoch, accuracy=0.638, loss=1.01, val_accuracy=0.64, val_loss=1.01]  16%|█▋        | 23/140 [1:38:05<8:19:26, 256.12s/epoch, accuracy=0.64, loss=1.01, val_accuracy=0.641, val_loss=1.01] 17%|█▋        | 24/140 [1:42:26<8:18:05, 257.64s/epoch, accuracy=0.641, loss=1.01, val_accuracy=0.64, val_loss=1.01] 18%|█▊        | 25/140 [1:46:57<8:21:26, 261.62s/epoch, accuracy=0.642, loss=1.01, val_accuracy=0.643, val_loss=1.01] 19%|█▊        | 26/140 [1:51:28<8:22:26, 264.44s/epoch, accuracy=0.643, loss=1, val_accuracy=0.644, val_loss=1.01]    19%|█▉        | 27/140 [1:55:56<8:20:14, 265.62s/epoch, accuracy=0.643, loss=1, val_accuracy=0.646, val_loss=1.01] 20%|██        | 28/140 [2:00:24<8:17:08, 266.33s/epoch, accuracy=0.644, loss=1, val_accuracy=0.646, val_loss=1]    21%|██        | 29/140 [2:04:52<8:13:50, 266.94s/epoch, accuracy=0.645, loss=1, val_accuracy=0.646, val_loss=1] 21%|██▏       | 30/140 [2:09:21<8:10:25, 267.50s/epoch, accuracy=0.646, loss=1, val_accuracy=0.648, val_loss=1] 22%|██▏       | 31/140 [2:13:50<8:06:29, 267.80s/epoch, accuracy=0.646, loss=1, val_accuracy=0.648, val_loss=1] 23%|██▎       | 32/140 [2:18:20<8:03:26, 268.58s/epoch, accuracy=0.647, loss=1, val_accuracy=0.649, val_loss=1] 24%|██▎       | 33/140 [2:22:59<8:04:31, 271.70s/epoch, accuracy=0.648, loss=0.999, val_accuracy=0.649, val_loss=1] 24%|██▍       | 34/140 [2:27:38<8:03:57, 273.94s/epoch, accuracy=0.648, loss=0.999, val_accuracy=0.649, val_loss=1] 25%|██▌       | 35/140 [2:32:19<8:02:40, 275.82s/epoch, accuracy=0.649, loss=0.998, val_accuracy=0.651, val_loss=1] 26%|██▌       | 36/140 [2:36:57<7:59:21, 276.55s/epoch, accuracy=0.649, loss=0.997, val_accuracy=0.651, val_loss=0.999] 26%|██▋       | 37/140 [2:41:31<7:53:20, 275.73s/epoch, accuracy=0.65, loss=0.996, val_accuracy=0.65, val_loss=0.998]   27%|██▋       | 38/140 [2:45:56<7:43:13, 272.49s/epoch, accuracy=0.65, loss=0.996, val_accuracy=0.652, val_loss=1]    28%|██▊       | 39/140 [2:50:20<7:34:40, 270.10s/epoch, accuracy=0.651, loss=0.995, val_accuracy=0.649, val_loss=0.999] 29%|██▊       | 40/140 [2:54:45<7:27:31, 268.51s/epoch, accuracy=0.651, loss=0.995, val_accuracy=0.651, val_loss=0.996] 29%|██▉       | 41/140 [2:59:09<7:21:03, 267.30s/epoch, accuracy=0.652, loss=0.994, val_accuracy=0.651, val_loss=0.997] 30%|███       | 42/140 [3:03:34<7:15:10, 266.43s/epoch, accuracy=0.652, loss=0.994, val_accuracy=0.648, val_loss=0.999] 31%|███       | 43/140 [3:07:57<7:09:05, 265.42s/epoch, accuracy=0.652, loss=0.993, val_accuracy=0.653, val_loss=0.997] 31%|███▏      | 44/140 [3:12:21<7:03:58, 264.98s/epoch, accuracy=0.653, loss=0.993, val_accuracy=0.653, val_loss=0.994] 32%|███▏      | 45/140 [3:16:46<6:59:36, 265.02s/epoch, accuracy=0.653, loss=0.992, val_accuracy=0.652, val_loss=0.994] 33%|███▎      | 46/140 [3:21:10<6:54:53, 264.82s/epoch, accuracy=0.654, loss=0.992, val_accuracy=0.653, val_loss=0.994] 34%|███▎      | 47/140 [3:25:33<6:49:42, 264.33s/epoch, accuracy=0.654, loss=0.991, val_accuracy=0.655, val_loss=0.996] 34%|███▍      | 48/140 [3:29:57<6:44:57, 264.11s/epoch, accuracy=0.654, loss=0.991, val_accuracy=0.653, val_loss=0.992] 35%|███▌      | 49/140 [3:34:21<6:40:34, 264.12s/epoch, accuracy=0.654, loss=0.99, val_accuracy=0.654, val_loss=0.992]  36%|███▌      | 50/140 [3:38:46<6:36:34, 264.38s/epoch, accuracy=0.655, loss=0.99, val_accuracy=0.655, val_loss=0.994] 36%|███▋      | 51/140 [3:43:11<6:32:30, 264.61s/epoch, accuracy=0.655, loss=0.989, val_accuracy=0.657, val_loss=0.992] 37%|███▋      | 52/140 [3:47:36<6:28:17, 264.75s/epoch, accuracy=0.656, loss=0.989, val_accuracy=0.655, val_loss=0.992] 38%|███▊      | 53/140 [3:52:02<6:24:09, 264.93s/epoch, accuracy=0.656, loss=0.989, val_accuracy=0.657, val_loss=0.99]  39%|███▊      | 54/140 [3:56:27<6:19:46, 264.96s/epoch, accuracy=0.656, loss=0.988, val_accuracy=0.656, val_loss=0.99] 39%|███▉      | 55/140 [4:00:50<6:14:40, 264.47s/epoch, accuracy=0.656, loss=0.988, val_accuracy=0.658, val_loss=0.994] 40%|████      | 56/140 [4:05:15<6:10:14, 264.46s/epoch, accuracy=0.656, loss=0.987, val_accuracy=0.656, val_loss=0.989] 41%|████      | 57/140 [4:09:39<6:05:50, 264.46s/epoch, accuracy=0.657, loss=0.987, val_accuracy=0.659, val_loss=0.989] 41%|████▏     | 58/140 [4:14:02<6:00:58, 264.13s/epoch, accuracy=0.657, loss=0.987, val_accuracy=0.656, val_loss=0.989] 42%|████▏     | 59/140 [4:18:26<5:56:19, 263.94s/epoch, accuracy=0.657, loss=0.986, val_accuracy=0.659, val_loss=0.995] 43%|████▎     | 60/140 [4:22:51<5:52:28, 264.36s/epoch, accuracy=0.657, loss=0.986, val_accuracy=0.66, val_loss=0.989]  44%|████▎     | 61/140 [4:27:20<5:49:57, 265.79s/epoch, accuracy=0.658, loss=0.986, val_accuracy=0.656, val_loss=0.989] 44%|████▍     | 62/140 [4:31:49<5:46:39, 266.66s/epoch, accuracy=0.658, loss=0.985, val_accuracy=0.659, val_loss=0.988] 45%|████▌     | 63/140 [4:36:17<5:42:51, 267.17s/epoch, accuracy=0.658, loss=0.985, val_accuracy=0.66, val_loss=0.987]  46%|████▌     | 64/140 [4:40:46<5:38:48, 267.48s/epoch, accuracy=0.658, loss=0.985, val_accuracy=0.653, val_loss=0.993] 46%|████▋     | 65/140 [4:45:14<5:34:36, 267.68s/epoch, accuracy=0.658, loss=0.984, val_accuracy=0.659, val_loss=0.987] 47%|████▋     | 66/140 [4:49:42<5:30:20, 267.84s/epoch, accuracy=0.659, loss=0.984, val_accuracy=0.66, val_loss=0.986]  48%|████▊     | 67/140 [4:54:11<5:26:08, 268.07s/epoch, accuracy=0.658, loss=0.984, val_accuracy=0.659, val_loss=0.985] 49%|████▊     | 68/140 [4:58:39<5:21:44, 268.11s/epoch, accuracy=0.659, loss=0.983, val_accuracy=0.661, val_loss=0.986] 49%|████▉     | 69/140 [5:03:07<5:17:17, 268.13s/epoch, accuracy=0.659, loss=0.983, val_accuracy=0.66, val_loss=0.986]  50%|█████     | 70/140 [5:07:34<5:12:27, 267.82s/epoch, accuracy=0.659, loss=0.983, val_accuracy=0.66, val_loss=0.985] 51%|█████     | 71/140 [5:11:56<5:06:00, 266.09s/epoch, accuracy=0.659, loss=0.983, val_accuracy=0.657, val_loss=0.987] 51%|█████▏    | 72/140 [5:16:18<5:00:11, 264.88s/epoch, accuracy=0.659, loss=0.982, val_accuracy=0.661, val_loss=0.984] 52%|█████▏    | 73/140 [5:20:42<4:55:24, 264.54s/epoch, accuracy=0.659, loss=0.982, val_accuracy=0.657, val_loss=0.986] 53%|█████▎    | 74/140 [5:25:05<4:50:25, 264.02s/epoch, accuracy=0.659, loss=0.982, val_accuracy=0.662, val_loss=0.984] 54%|█████▎    | 75/140 [5:29:28<4:45:41, 263.71s/epoch, accuracy=0.659, loss=0.982, val_accuracy=0.661, val_loss=0.984] 54%|█████▍    | 76/140 [5:33:50<4:40:47, 263.25s/epoch, accuracy=0.66, loss=0.982, val_accuracy=0.659, val_loss=0.984]  55%|█████▌    | 77/140 [5:38:14<4:36:39, 263.48s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.659, val_loss=0.986] 56%|█████▌    | 78/140 [5:42:41<4:33:16, 264.47s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.658, val_loss=0.985] 56%|█████▋    | 79/140 [5:47:07<4:29:30, 265.09s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.662, val_loss=0.982] 57%|█████▋    | 80/140 [5:51:34<4:25:36, 265.60s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.655, val_loss=0.99]  58%|█████▊    | 81/140 [5:56:00<4:21:17, 265.72s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.66, val_loss=0.982] 59%|█████▊    | 82/140 [6:00:26<4:17:06, 265.97s/epoch, accuracy=0.66, loss=0.981, val_accuracy=0.662, val_loss=0.984] 59%|█████▉    | 83/140 [6:04:53<4:12:54, 266.22s/epoch, accuracy=0.66, loss=0.98, val_accuracy=0.662, val_loss=0.984]  60%|██████    | 84/140 [6:09:20<4:08:33, 266.30s/epoch, accuracy=0.661, loss=0.98, val_accuracy=0.662, val_loss=0.984] 61%|██████    | 85/140 [6:13:46<4:04:10, 266.37s/epoch, accuracy=0.66, loss=0.98, val_accuracy=0.66, val_loss=0.982]   61%|██████▏   | 86/140 [6:18:13<3:59:51, 266.52s/epoch, accuracy=0.661, loss=0.98, val_accuracy=0.663, val_loss=0.981] 62%|██████▏   | 87/140 [6:22:40<3:55:30, 266.61s/epoch, accuracy=0.66, loss=0.98, val_accuracy=0.663, val_loss=0.982]  63%|██████▎   | 88/140 [6:27:07<3:51:14, 266.82s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.659, val_loss=0.984] 64%|██████▎   | 89/140 [6:31:34<3:46:43, 266.74s/epoch, accuracy=0.661, loss=0.98, val_accuracy=0.661, val_loss=0.981]  64%|██████▍   | 90/140 [6:36:01<3:42:24, 266.90s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.661, val_loss=0.986] 65%|██████▌   | 91/140 [6:40:28<3:37:56, 266.86s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.661, val_loss=0.984] 66%|██████▌   | 92/140 [6:44:55<3:33:33, 266.94s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.662, val_loss=0.983] 66%|██████▋   | 93/140 [6:49:22<3:29:04, 266.91s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.661, val_loss=0.981] 67%|██████▋   | 94/140 [6:53:48<3:24:33, 266.82s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.663, val_loss=0.98]  68%|██████▊   | 95/140 [6:58:15<3:20:06, 266.82s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.662, val_loss=0.982] 69%|██████▊   | 96/140 [7:02:42<3:15:40, 266.84s/epoch, accuracy=0.661, loss=0.979, val_accuracy=0.663, val_loss=0.981] 69%|██████▉   | 97/140 [7:07:08<3:10:57, 266.46s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.663, val_loss=0.979] 70%|███████   | 98/140 [7:11:34<3:06:31, 266.47s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.663, val_loss=0.98]  71%|███████   | 99/140 [7:16:01<3:02:09, 266.57s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.662, val_loss=0.979] 71%|███████▏  | 100/140 [7:20:27<2:57:37, 266.45s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.664, val_loss=0.981] 72%|███████▏  | 101/140 [7:24:54<2:53:14, 266.54s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.663, val_loss=0.981] 73%|███████▎  | 102/140 [7:29:20<2:48:45, 266.46s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.661, val_loss=0.988] 74%|███████▎  | 103/140 [7:33:47<2:44:19, 266.48s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.66, val_loss=0.98]   74%|███████▍  | 104/140 [7:38:13<2:39:52, 266.45s/epoch, accuracy=0.662, loss=0.978, val_accuracy=0.664, val_loss=0.978] 75%|███████▌  | 105/140 [7:42:40<2:35:25, 266.44s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.656, val_loss=0.988] 76%|███████▌  | 106/140 [7:47:06<2:30:58, 266.42s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.664, val_loss=0.979] 76%|███████▋  | 107/140 [7:51:32<2:26:28, 266.31s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.664, val_loss=0.979] 77%|███████▋  | 108/140 [7:55:58<2:22:02, 266.34s/epoch, accuracy=0.663, loss=0.977, val_accuracy=0.662, val_loss=0.982] 78%|███████▊  | 109/140 [8:00:33<2:18:53, 268.81s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.661, val_loss=0.983] 79%|███████▊  | 110/140 [8:05:08<2:15:22, 270.76s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.665, val_loss=0.98]  79%|███████▉  | 111/140 [8:09:41<2:11:08, 271.34s/epoch, accuracy=0.662, loss=0.977, val_accuracy=0.662, val_loss=0.979] 80%|████████  | 112/140 [8:14:12<2:06:33, 271.20s/epoch, accuracy=0.663, loss=0.977, val_accuracy=0.661, val_loss=0.982] 81%|████████  | 113/140 [8:18:43<2:02:04, 271.29s/epoch, accuracy=0.663, loss=0.977, val_accuracy=0.662, val_loss=0.981] 81%|████████▏ | 114/140 [8:23:10<1:56:53, 269.76s/epoch, accuracy=0.663, loss=0.977, val_accuracy=0.665, val_loss=0.978] 82%|████████▏ | 115/140 [8:27:33<1:51:38, 267.93s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.662, val_loss=0.982] 83%|████████▎ | 116/140 [8:31:58<1:46:46, 266.94s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.663, val_loss=0.979] 84%|████████▎ | 117/140 [8:36:25<1:42:18, 266.90s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.666, val_loss=0.978] 84%|████████▍ | 118/140 [8:40:57<1:38:25, 268.42s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.662, val_loss=0.978] 85%|████████▌ | 119/140 [8:45:40<1:35:29, 272.83s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.663, val_loss=0.98]  86%|████████▌ | 120/140 [8:50:33<1:32:58, 278.90s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.661, val_loss=0.992] 86%|████████▋ | 121/140 [8:55:23<1:29:21, 282.17s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.664, val_loss=0.978] 87%|████████▋ | 122/140 [9:00:07<1:24:51, 282.88s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.664, val_loss=0.978] 88%|████████▊ | 123/140 [9:04:41<1:19:23, 280.23s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.663, val_loss=0.978] 89%|████████▊ | 124/140 [9:09:13<1:14:01, 277.56s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.664, val_loss=0.98]  89%|████████▉ | 125/140 [9:13:43<1:08:53, 275.58s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.663, val_loss=0.978] 90%|█████████ | 126/140 [9:18:13<1:03:53, 273.85s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.665, val_loss=0.98]  91%|█████████ | 127/140 [9:22:44<59:07, 272.86s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.666, val_loss=0.98]   91%|█████████▏| 128/140 [9:27:14<54:22, 271.90s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.664, val_loss=0.978] 92%|█████████▏| 129/140 [9:31:42<49:39, 270.83s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.661, val_loss=0.987] 93%|█████████▎| 130/140 [9:36:09<44:58, 269.82s/epoch, accuracy=0.664, loss=0.976, val_accuracy=0.662, val_loss=0.981] 94%|█████████▎| 131/140 [9:40:37<40:22, 269.22s/epoch, accuracy=0.664, loss=0.976, val_accuracy=0.663, val_loss=0.983] 94%|█████████▍| 132/140 [9:45:04<35:47, 268.45s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.666, val_loss=0.976] 95%|█████████▌| 133/140 [9:49:32<31:17, 268.27s/epoch, accuracy=0.664, loss=0.976, val_accuracy=0.665, val_loss=0.977] 96%|█████████▌| 134/140 [9:54:02<26:52, 268.76s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.664, val_loss=0.977] 96%|█████████▋| 135/140 [9:58:29<22:21, 268.40s/epoch, accuracy=0.663, loss=0.976, val_accuracy=0.666, val_loss=0.976] 97%|█████████▋| 136/140 [10:03:00<17:56, 269.04s/epoch, accuracy=0.664, loss=0.975, val_accuracy=0.664, val_loss=0.979] 98%|█████████▊| 137/140 [10:07:31<13:29, 269.73s/epoch, accuracy=0.664, loss=0.976, val_accuracy=0.666, val_loss=0.976] 99%|█████████▊| 138/140 [10:12:00<08:59, 269.60s/epoch, accuracy=0.664, loss=0.975, val_accuracy=0.664, val_loss=0.978] 99%|█████████▉| 139/140 [10:16:31<04:29, 270.00s/epoch, accuracy=0.664, loss=0.976, val_accuracy=0.666, val_loss=0.978]100%|██████████| 140/140 [10:21:03<00:00, 270.42s/epoch, accuracy=0.664, loss=0.975, val_accuracy=0.665, val_loss=0.977]100%|██████████| 140/140 [10:21:03<00:00, 266.17s/epoch, accuracy=0.664, loss=0.975, val_accuracy=0.665, val_loss=0.977]
