#!/usr/bin/env python
from nanopelican.layers import *
from nanopelican.scripts import run
from keras import layers, Model

def CreateModel(shape, conf):
    x = x_in = layers.Input(shape)

    x = InnerProduct(conf['inner_product'])(x)

    x = Lineq2v2(symmetric=True, hollow=True, num_avg=conf['num_avg'])(x)

    for units, activ in zip(conf['hidden']['dense'], conf['hidden']['activations']):
        x = layers.Dense(units=units, activation=activ)(x)

    x = Lineq2v0(num_avg=conf['num_avg'])(x)

    for units, activ in zip(conf['out']['dense'], conf['out']['activations']):
        x = layers.Dense(units=units, activation=activ)(x)

    x = layers.Activation(conf['out_activ'])(x)

    return Model(inputs=x_in, outputs=x)

def main():
    run(CreateModel)

if __name__ == '__main__':
    main()

