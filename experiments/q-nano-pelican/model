#!/usr/bin/env python
import os
os.environ["TF_USE_LEGACY_KERAS"] = "1"
from nanopelican.layers import *
from nanopelican.scripts import run
from keras import layers, Model
from qkeras import *

def CreateModel(shape, conf):
    x = x_in = layers.Input(shape)
    x = InnerProduct(conf['inner_product'])(x)
    x = Lineq2v2(symmetric=True, hollow=True, num_avg=conf['num_avg'], diag_bias=True)(x)

    x = QDense(
        units=conf['n_hidden'],
        kernel_quantizer='stochastic_ternary',
        bias_quantizer='quantized_po2(4)'
    )(x)

    x = QActivation(activation=conf['activation'])(x)

    x = Lineq2v0(num_avg=conf['num_avg'])(x)

    x = QDense(
        units=conf['n_outputs'],
        kernel_quantizer="quantized_bits(3,0,1)",
        bias_quantizer="quantized_bits(3)"
    )(x)

    x = layers.Activation(conf['out_activation'])(x)
    return Model(inputs=x_in, outputs=x)

def main():
    run(CreateModel)

if __name__ == '__main__':
    main()

