2024-05-27 20:09:21.480357: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-05-27 20:09:21.483037: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-27 20:09:21.571000: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-27 20:09:22.038405: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-27 20:09:23.958319: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-27 20:09:31.440358: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 3)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 6)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ diag_bias_dense (DiagBiasDense) │ (None, 32, 32, 10)     │            80 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ activation (Activation)         │ (None, 32, 32, 10)     │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 20)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 5)              │           105 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ activation_1 (Activation)       │ (None, 5)              │             0 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 185 (740.00 B)
 Trainable params: 185 (740.00 B)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/140 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  1%|          | 1/140 [02:24<5:35:27, 144.80s/epoch, accuracy=0.463, loss=1.39, val_accuracy=0.611, val_loss=1.12]  1%|▏         | 2/140 [04:53<5:38:13, 147.06s/epoch, accuracy=0.636, loss=1.08, val_accuracy=0.655, val_loss=1.04]  2%|▏         | 3/140 [07:20<5:36:03, 147.18s/epoch, accuracy=0.657, loss=1.01, val_accuracy=0.658, val_loss=0.993]  3%|▎         | 4/140 [09:47<5:33:13, 147.01s/epoch, accuracy=0.66, loss=0.976, val_accuracy=0.662, val_loss=0.966]  4%|▎         | 5/140 [12:13<5:30:06, 146.71s/epoch, accuracy=0.663, loss=0.956, val_accuracy=0.664, val_loss=0.95]  4%|▍         | 6/140 [14:35<5:23:50, 145.00s/epoch, accuracy=0.666, loss=0.942, val_accuracy=0.668, val_loss=0.938]  5%|▌         | 7/140 [16:54<5:17:26, 143.20s/epoch, accuracy=0.669, loss=0.933, val_accuracy=0.672, val_loss=0.931]  6%|▌         | 8/140 [19:17<5:14:55, 143.15s/epoch, accuracy=0.671, loss=0.925, val_accuracy=0.674, val_loss=0.924]  6%|▋         | 9/140 [21:39<5:11:39, 142.75s/epoch, accuracy=0.674, loss=0.92, val_accuracy=0.674, val_loss=0.919]   7%|▋         | 10/140 [24:02<5:09:06, 142.66s/epoch, accuracy=0.676, loss=0.915, val_accuracy=0.677, val_loss=0.915]  8%|▊         | 11/140 [26:22<5:05:08, 141.93s/epoch, accuracy=0.677, loss=0.911, val_accuracy=0.678, val_loss=0.912]  9%|▊         | 12/140 [28:44<5:03:07, 142.09s/epoch, accuracy=0.678, loss=0.908, val_accuracy=0.678, val_loss=0.908]  9%|▉         | 13/140 [31:14<5:05:19, 144.25s/epoch, accuracy=0.679, loss=0.906, val_accuracy=0.679, val_loss=0.906] 10%|█         | 14/140 [33:45<5:07:12, 146.29s/epoch, accuracy=0.679, loss=0.903, val_accuracy=0.68, val_loss=0.904]  11%|█         | 15/140 [36:11<5:04:58, 146.39s/epoch, accuracy=0.68, loss=0.901, val_accuracy=0.681, val_loss=0.902] 11%|█▏        | 16/140 [38:39<5:03:09, 146.69s/epoch, accuracy=0.68, loss=0.899, val_accuracy=0.68, val_loss=0.9]    12%|█▏        | 17/140 [41:02<4:58:55, 145.81s/epoch, accuracy=0.681, loss=0.898, val_accuracy=0.681, val_loss=0.898] 13%|█▎        | 18/140 [43:33<4:59:25, 147.25s/epoch, accuracy=0.681, loss=0.896, val_accuracy=0.684, val_loss=0.898] 14%|█▎        | 19/140 [46:03<4:58:37, 148.08s/epoch, accuracy=0.681, loss=0.894, val_accuracy=0.682, val_loss=0.894] 14%|█▍        | 20/140 [48:34<4:57:40, 148.84s/epoch, accuracy=0.681, loss=0.892, val_accuracy=0.683, val_loss=0.891] 15%|█▌        | 21/140 [51:08<4:58:21, 150.43s/epoch, accuracy=0.681, loss=0.889, val_accuracy=0.684, val_loss=0.89]  16%|█▌        | 22/140 [53:42<4:58:16, 151.67s/epoch, accuracy=0.682, loss=0.887, val_accuracy=0.684, val_loss=0.887] 16%|█▋        | 23/140 [56:17<4:57:18, 152.46s/epoch, accuracy=0.683, loss=0.885, val_accuracy=0.683, val_loss=0.885] 17%|█▋        | 24/140 [58:52<4:56:22, 153.30s/epoch, accuracy=0.683, loss=0.883, val_accuracy=0.685, val_loss=0.884] 18%|█▊        | 25/140 [1:01:25<4:53:31, 153.14s/epoch, accuracy=0.684, loss=0.881, val_accuracy=0.686, val_loss=0.881] 19%|█▊        | 26/140 [1:04:02<4:53:17, 154.37s/epoch, accuracy=0.684, loss=0.88, val_accuracy=0.685, val_loss=0.879]  19%|█▉        | 27/140 [1:06:41<4:53:17, 155.73s/epoch, accuracy=0.684, loss=0.878, val_accuracy=0.684, val_loss=0.882] 20%|██        | 28/140 [1:09:20<4:52:33, 156.73s/epoch, accuracy=0.684, loss=0.877, val_accuracy=0.685, val_loss=0.877] 21%|██        | 29/140 [1:11:59<4:51:18, 157.46s/epoch, accuracy=0.685, loss=0.876, val_accuracy=0.685, val_loss=0.878] 21%|██▏       | 30/140 [1:14:38<4:49:25, 157.86s/epoch, accuracy=0.684, loss=0.876, val_accuracy=0.685, val_loss=0.876] 22%|██▏       | 31/140 [1:17:14<4:46:00, 157.44s/epoch, accuracy=0.685, loss=0.875, val_accuracy=0.685, val_loss=0.875] 23%|██▎       | 32/140 [1:19:48<4:41:36, 156.45s/epoch, accuracy=0.685, loss=0.874, val_accuracy=0.684, val_loss=0.879] 24%|██▎       | 33/140 [1:22:28<4:40:25, 157.24s/epoch, accuracy=0.685, loss=0.874, val_accuracy=0.685, val_loss=0.875] 24%|██▍       | 34/140 [1:25:04<4:37:17, 156.96s/epoch, accuracy=0.685, loss=0.873, val_accuracy=0.686, val_loss=0.874] 25%|██▌       | 35/140 [1:27:44<4:36:20, 157.91s/epoch, accuracy=0.685, loss=0.873, val_accuracy=0.686, val_loss=0.873] 26%|██▌       | 36/140 [1:30:24<4:35:00, 158.66s/epoch, accuracy=0.685, loss=0.872, val_accuracy=0.686, val_loss=0.874] 26%|██▋       | 37/140 [1:33:03<4:32:08, 158.53s/epoch, accuracy=0.685, loss=0.871, val_accuracy=0.686, val_loss=0.871] 27%|██▋       | 38/140 [1:35:44<4:31:00, 159.41s/epoch, accuracy=0.686, loss=0.871, val_accuracy=0.687, val_loss=0.871] 28%|██▊       | 39/140 [1:38:26<4:29:36, 160.17s/epoch, accuracy=0.685, loss=0.87, val_accuracy=0.686, val_loss=0.871]  29%|██▊       | 40/140 [1:41:07<4:27:12, 160.32s/epoch, accuracy=0.686, loss=0.87, val_accuracy=0.686, val_loss=0.87]  29%|██▉       | 41/140 [1:43:46<4:23:58, 159.99s/epoch, accuracy=0.686, loss=0.869, val_accuracy=0.686, val_loss=0.869] 30%|███       | 42/140 [1:46:23<4:19:45, 159.03s/epoch, accuracy=0.685, loss=0.869, val_accuracy=0.686, val_loss=0.87]  31%|███       | 43/140 [1:49:04<4:18:23, 159.83s/epoch, accuracy=0.686, loss=0.868, val_accuracy=0.686, val_loss=0.869] 31%|███▏      | 44/140 [1:51:46<4:16:46, 160.48s/epoch, accuracy=0.686, loss=0.868, val_accuracy=0.686, val_loss=0.868] 32%|███▏      | 45/140 [1:54:26<4:13:33, 160.14s/epoch, accuracy=0.686, loss=0.867, val_accuracy=0.687, val_loss=0.869] 33%|███▎      | 46/140 [1:57:05<4:10:35, 159.95s/epoch, accuracy=0.686, loss=0.867, val_accuracy=0.686, val_loss=0.867] 34%|███▎      | 47/140 [1:59:45<4:07:49, 159.88s/epoch, accuracy=0.686, loss=0.866, val_accuracy=0.687, val_loss=0.866] 34%|███▍      | 48/140 [2:02:27<4:05:56, 160.40s/epoch, accuracy=0.686, loss=0.866, val_accuracy=0.687, val_loss=0.867] 35%|███▌      | 49/140 [2:05:07<4:03:24, 160.48s/epoch, accuracy=0.687, loss=0.865, val_accuracy=0.687, val_loss=0.866] 36%|███▌      | 50/140 [2:07:48<4:00:56, 160.63s/epoch, accuracy=0.687, loss=0.865, val_accuracy=0.688, val_loss=0.865] 36%|███▋      | 51/140 [2:10:29<3:58:20, 160.68s/epoch, accuracy=0.687, loss=0.864, val_accuracy=0.688, val_loss=0.867] 37%|███▋      | 52/140 [2:13:09<3:55:19, 160.45s/epoch, accuracy=0.687, loss=0.864, val_accuracy=0.688, val_loss=0.865] 38%|███▊      | 53/140 [2:15:45<3:50:37, 159.05s/epoch, accuracy=0.687, loss=0.863, val_accuracy=0.688, val_loss=0.865] 39%|███▊      | 54/140 [2:18:19<3:45:59, 157.66s/epoch, accuracy=0.687, loss=0.863, val_accuracy=0.689, val_loss=0.862] 39%|███▉      | 55/140 [2:20:56<3:42:55, 157.36s/epoch, accuracy=0.687, loss=0.863, val_accuracy=0.687, val_loss=0.864] 40%|████      | 56/140 [2:23:40<3:43:07, 159.37s/epoch, accuracy=0.687, loss=0.862, val_accuracy=0.689, val_loss=0.865] 41%|████      | 57/140 [2:26:24<3:42:23, 160.77s/epoch, accuracy=0.688, loss=0.862, val_accuracy=0.688, val_loss=0.866] 41%|████▏     | 58/140 [2:29:08<3:41:09, 161.83s/epoch, accuracy=0.688, loss=0.861, val_accuracy=0.69, val_loss=0.861]  42%|████▏     | 59/140 [2:31:45<3:36:30, 160.37s/epoch, accuracy=0.688, loss=0.861, val_accuracy=0.69, val_loss=0.861] 43%|████▎     | 60/140 [2:34:22<3:32:22, 159.28s/epoch, accuracy=0.688, loss=0.86, val_accuracy=0.689, val_loss=0.861] 44%|████▎     | 61/140 [2:37:00<3:29:05, 158.81s/epoch, accuracy=0.688, loss=0.86, val_accuracy=0.69, val_loss=0.859]  44%|████▍     | 62/140 [2:39:36<3:25:31, 158.09s/epoch, accuracy=0.688, loss=0.859, val_accuracy=0.69, val_loss=0.859] 45%|████▌     | 63/140 [2:42:10<3:21:22, 156.92s/epoch, accuracy=0.689, loss=0.859, val_accuracy=0.69, val_loss=0.859] 46%|████▌     | 64/140 [2:44:47<3:18:43, 156.89s/epoch, accuracy=0.689, loss=0.859, val_accuracy=0.69, val_loss=0.859] 46%|████▋     | 65/140 [2:47:25<3:16:30, 157.20s/epoch, accuracy=0.689, loss=0.858, val_accuracy=0.69, val_loss=0.858] 47%|████▋     | 66/140 [2:50:03<3:14:02, 157.33s/epoch, accuracy=0.689, loss=0.858, val_accuracy=0.691, val_loss=0.858] 48%|████▊     | 67/140 [2:52:41<3:11:51, 157.69s/epoch, accuracy=0.689, loss=0.857, val_accuracy=0.691, val_loss=0.857] 49%|████▊     | 68/140 [2:55:22<3:10:30, 158.76s/epoch, accuracy=0.689, loss=0.857, val_accuracy=0.69, val_loss=0.857]  49%|████▉     | 69/140 [2:58:09<3:10:38, 161.10s/epoch, accuracy=0.689, loss=0.856, val_accuracy=0.69, val_loss=0.859] 50%|█████     | 70/140 [3:00:55<3:09:32, 162.46s/epoch, accuracy=0.69, loss=0.856, val_accuracy=0.689, val_loss=0.859] 51%|█████     | 71/140 [3:03:32<3:05:05, 160.94s/epoch, accuracy=0.69, loss=0.856, val_accuracy=0.691, val_loss=0.855] 51%|█████▏    | 72/140 [3:06:13<3:02:27, 161.00s/epoch, accuracy=0.69, loss=0.855, val_accuracy=0.691, val_loss=0.856] 52%|█████▏    | 73/140 [3:08:54<2:59:38, 160.87s/epoch, accuracy=0.69, loss=0.855, val_accuracy=0.691, val_loss=0.855] 53%|█████▎    | 74/140 [3:11:33<2:56:31, 160.48s/epoch, accuracy=0.69, loss=0.855, val_accuracy=0.691, val_loss=0.855] 54%|█████▎    | 75/140 [3:14:13<2:53:30, 160.16s/epoch, accuracy=0.69, loss=0.854, val_accuracy=0.69, val_loss=0.855]  54%|█████▍    | 76/140 [3:16:51<2:50:13, 159.59s/epoch, accuracy=0.69, loss=0.854, val_accuracy=0.691, val_loss=0.854] 55%|█████▌    | 77/140 [3:19:17<2:43:19, 155.55s/epoch, accuracy=0.691, loss=0.853, val_accuracy=0.693, val_loss=0.853] 56%|█████▌    | 78/140 [3:21:44<2:37:57, 152.86s/epoch, accuracy=0.69, loss=0.853, val_accuracy=0.692, val_loss=0.854]  56%|█████▋    | 79/140 [3:24:09<2:33:10, 150.66s/epoch, accuracy=0.691, loss=0.853, val_accuracy=0.692, val_loss=0.854] 57%|█████▋    | 80/140 [3:26:31<2:28:02, 148.03s/epoch, accuracy=0.691, loss=0.853, val_accuracy=0.691, val_loss=0.852] 58%|█████▊    | 81/140 [3:28:46<2:21:46, 144.18s/epoch, accuracy=0.691, loss=0.852, val_accuracy=0.692, val_loss=0.852] 59%|█████▊    | 82/140 [3:31:00<2:16:27, 141.16s/epoch, accuracy=0.691, loss=0.852, val_accuracy=0.693, val_loss=0.851] 59%|█████▉    | 83/140 [3:33:14<2:12:04, 139.02s/epoch, accuracy=0.691, loss=0.851, val_accuracy=0.692, val_loss=0.855] 60%|██████    | 84/140 [3:35:28<2:08:19, 137.50s/epoch, accuracy=0.691, loss=0.851, val_accuracy=0.693, val_loss=0.852] 61%|██████    | 85/140 [3:37:43<2:05:09, 136.53s/epoch, accuracy=0.691, loss=0.851, val_accuracy=0.692, val_loss=0.85]  61%|██████▏   | 86/140 [3:39:57<2:02:11, 135.77s/epoch, accuracy=0.691, loss=0.851, val_accuracy=0.693, val_loss=0.854] 62%|██████▏   | 87/140 [3:42:10<1:59:24, 135.18s/epoch, accuracy=0.691, loss=0.85, val_accuracy=0.693, val_loss=0.849]  63%|██████▎   | 88/140 [3:44:25<1:56:52, 134.85s/epoch, accuracy=0.692, loss=0.85, val_accuracy=0.693, val_loss=0.852] 64%|██████▎   | 89/140 [3:46:38<1:54:21, 134.54s/epoch, accuracy=0.692, loss=0.85, val_accuracy=0.693, val_loss=0.85]  64%|██████▍   | 90/140 [3:48:52<1:51:53, 134.27s/epoch, accuracy=0.692, loss=0.85, val_accuracy=0.693, val_loss=0.85] 65%|██████▌   | 91/140 [3:51:06<1:49:34, 134.17s/epoch, accuracy=0.692, loss=0.849, val_accuracy=0.693, val_loss=0.848] 66%|██████▌   | 92/140 [3:53:18<1:46:43, 133.41s/epoch, accuracy=0.692, loss=0.849, val_accuracy=0.693, val_loss=0.848] 66%|██████▋   | 93/140 [3:55:27<1:43:36, 132.26s/epoch, accuracy=0.692, loss=0.849, val_accuracy=0.694, val_loss=0.849] 67%|██████▋   | 94/140 [3:57:37<1:40:45, 131.42s/epoch, accuracy=0.692, loss=0.849, val_accuracy=0.694, val_loss=0.848] 68%|██████▊   | 95/140 [3:59:46<1:38:01, 130.71s/epoch, accuracy=0.692, loss=0.849, val_accuracy=0.693, val_loss=0.849] 69%|██████▊   | 96/140 [4:01:55<1:35:34, 130.33s/epoch, accuracy=0.692, loss=0.848, val_accuracy=0.695, val_loss=0.848] 69%|██████▉   | 97/140 [4:04:05<1:33:24, 130.34s/epoch, accuracy=0.692, loss=0.848, val_accuracy=0.693, val_loss=0.85]  70%|███████   | 98/140 [4:06:16<1:31:14, 130.34s/epoch, accuracy=0.692, loss=0.848, val_accuracy=0.692, val_loss=0.851] 71%|███████   | 99/140 [4:08:26<1:29:06, 130.41s/epoch, accuracy=0.693, loss=0.848, val_accuracy=0.693, val_loss=0.849] 71%|███████▏  | 100/140 [4:10:37<1:26:53, 130.33s/epoch, accuracy=0.693, loss=0.847, val_accuracy=0.694, val_loss=0.847] 72%|███████▏  | 101/140 [4:12:47<1:24:45, 130.39s/epoch, accuracy=0.693, loss=0.847, val_accuracy=0.694, val_loss=0.847] 73%|███████▎  | 102/140 [4:14:57<1:22:31, 130.31s/epoch, accuracy=0.693, loss=0.847, val_accuracy=0.694, val_loss=0.848] 74%|███████▎  | 103/140 [4:17:07<1:20:16, 130.16s/epoch, accuracy=0.693, loss=0.847, val_accuracy=0.695, val_loss=0.848] 74%|███████▍  | 104/140 [4:19:17<1:18:03, 130.11s/epoch, accuracy=0.693, loss=0.846, val_accuracy=0.694, val_loss=0.848] 75%|███████▌  | 105/140 [4:21:27<1:15:52, 130.08s/epoch, accuracy=0.693, loss=0.847, val_accuracy=0.693, val_loss=0.851] 76%|███████▌  | 106/140 [4:23:38<1:13:49, 130.28s/epoch, accuracy=0.693, loss=0.846, val_accuracy=0.694, val_loss=0.847] 76%|███████▋  | 107/140 [4:25:49<1:11:47, 130.54s/epoch, accuracy=0.693, loss=0.846, val_accuracy=0.694, val_loss=0.847] 77%|███████▋  | 108/140 [4:28:00<1:09:46, 130.83s/epoch, accuracy=0.693, loss=0.846, val_accuracy=0.694, val_loss=0.846] 78%|███████▊  | 109/140 [4:30:12<1:07:42, 131.05s/epoch, accuracy=0.693, loss=0.846, val_accuracy=0.695, val_loss=0.846] 79%|███████▊  | 110/140 [4:32:24<1:05:43, 131.44s/epoch, accuracy=0.693, loss=0.845, val_accuracy=0.694, val_loss=0.846] 79%|███████▉  | 111/140 [4:34:36<1:03:37, 131.63s/epoch, accuracy=0.693, loss=0.845, val_accuracy=0.694, val_loss=0.845] 80%|████████  | 112/140 [4:36:49<1:01:30, 131.81s/epoch, accuracy=0.694, loss=0.845, val_accuracy=0.695, val_loss=0.846] 81%|████████  | 113/140 [4:39:00<59:18, 131.80s/epoch, accuracy=0.693, loss=0.845, val_accuracy=0.694, val_loss=0.845]   81%|████████▏ | 114/140 [4:41:11<57:01, 131.59s/epoch, accuracy=0.694, loss=0.845, val_accuracy=0.695, val_loss=0.845] 82%|████████▏ | 115/140 [4:43:22<54:41, 131.26s/epoch, accuracy=0.694, loss=0.845, val_accuracy=0.695, val_loss=0.845] 83%|████████▎ | 116/140 [4:45:33<52:31, 131.32s/epoch, accuracy=0.694, loss=0.845, val_accuracy=0.695, val_loss=0.844] 84%|████████▎ | 117/140 [4:47:45<50:23, 131.47s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.695, val_loss=0.844] 84%|████████▍ | 118/140 [4:49:56<48:10, 131.39s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.695, val_loss=0.844] 85%|████████▌ | 119/140 [4:52:08<46:02, 131.56s/epoch, accuracy=0.694, loss=0.845, val_accuracy=0.695, val_loss=0.845] 86%|████████▌ | 120/140 [4:54:20<43:52, 131.61s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.694, val_loss=0.844] 86%|████████▋ | 121/140 [4:56:32<41:41, 131.67s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.696, val_loss=0.844] 87%|████████▋ | 122/140 [4:58:44<39:32, 131.79s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.696, val_loss=0.845] 88%|████████▊ | 123/140 [5:00:58<37:31, 132.41s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.695, val_loss=0.845] 89%|████████▊ | 124/140 [5:03:14<35:35, 133.47s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.696, val_loss=0.843] 89%|████████▉ | 125/140 [5:05:29<33:31, 134.08s/epoch, accuracy=0.694, loss=0.844, val_accuracy=0.694, val_loss=0.845] 90%|█████████ | 126/140 [5:07:46<31:29, 134.93s/epoch, accuracy=0.694, loss=0.843, val_accuracy=0.696, val_loss=0.842] 91%|█████████ | 127/140 [5:10:01<29:11, 134.75s/epoch, accuracy=0.694, loss=0.843, val_accuracy=0.695, val_loss=0.844] 91%|█████████▏| 128/140 [5:12:14<26:51, 134.26s/epoch, accuracy=0.694, loss=0.843, val_accuracy=0.697, val_loss=0.843] 92%|█████████▏| 129/140 [5:14:27<24:34, 134.01s/epoch, accuracy=0.695, loss=0.843, val_accuracy=0.695, val_loss=0.843] 93%|█████████▎| 130/140 [5:16:41<22:18, 133.83s/epoch, accuracy=0.695, loss=0.843, val_accuracy=0.696, val_loss=0.843] 94%|█████████▎| 131/140 [5:18:54<20:02, 133.63s/epoch, accuracy=0.695, loss=0.843, val_accuracy=0.696, val_loss=0.841] 94%|█████████▍| 132/140 [5:21:07<17:48, 133.57s/epoch, accuracy=0.695, loss=0.843, val_accuracy=0.696, val_loss=0.844] 95%|█████████▌| 133/140 [5:23:20<15:33, 133.37s/epoch, accuracy=0.695, loss=0.843, val_accuracy=0.696, val_loss=0.842] 96%|█████████▌| 134/140 [5:25:33<13:19, 133.26s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.696, val_loss=0.842] 96%|█████████▋| 135/140 [5:27:47<11:07, 133.43s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.696, val_loss=0.842] 97%|█████████▋| 136/140 [5:30:01<08:53, 133.50s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.696, val_loss=0.842] 98%|█████████▊| 137/140 [5:32:14<06:40, 133.45s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.697, val_loss=0.841] 99%|█████████▊| 138/140 [5:34:28<04:27, 133.54s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.695, val_loss=0.842] 99%|█████████▉| 139/140 [5:36:42<02:13, 133.91s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.697, val_loss=0.841]100%|██████████| 140/140 [5:38:57<00:00, 134.21s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.697, val_loss=0.843]100%|██████████| 140/140 [5:38:57<00:00, 145.27s/epoch, accuracy=0.695, loss=0.842, val_accuracy=0.697, val_loss=0.843]
