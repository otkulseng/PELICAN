2024-05-29 22:50:54.581784: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 22:50:54.654220: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 22:50:54.988304: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 22:50:58.012003: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 22:51:10.633312: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 4)      │            32 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 8)              │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │           576 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 64)             │         4,160 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_4 (Dense)                 │ (None, 5)              │           165 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 7,013 (27.39 KB)
 Trainable params: 7,013 (27.39 KB)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [02:14<37:19:51, 134.53s/epoch, accuracy=0.678, loss=0.89, lr=0.01, val_accuracy=0.698, val_loss=0.842, val_lr=0.01]  0%|          | 2/1000 [04:36<38:25:55, 138.63s/epoch, accuracy=0.701, loss=0.832, lr=0.01, val_accuracy=0.707, val_loss=0.821, val_lr=0.01]  0%|          | 3/1000 [07:18<41:24:00, 149.49s/epoch, accuracy=0.705, loss=0.821, lr=0.01, val_accuracy=0.708, val_loss=0.816, val_lr=0.01]  0%|          | 4/1000 [10:11<43:57:35, 158.89s/epoch, accuracy=0.707, loss=0.817, lr=0.01, val_accuracy=0.706, val_loss=0.816, val_lr=0.01]  0%|          | 5/1000 [13:09<45:45:10, 165.54s/epoch, accuracy=0.707, loss=0.815, lr=0.01, val_accuracy=0.706, val_loss=0.817, val_lr=0.01]  1%|          | 6/1000 [16:02<46:29:31, 168.38s/epoch, accuracy=0.708, loss=0.812, lr=0.01, val_accuracy=0.71, val_loss=0.81, val_lr=0.01]    1%|          | 7/1000 [18:57<47:00:49, 170.44s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.711, val_loss=0.807, val_lr=0.01]  1%|          | 8/1000 [21:48<47:01:52, 170.68s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.707, val_loss=0.815, val_lr=0.01]  1%|          | 9/1000 [24:52<48:08:12, 174.87s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.71, val_loss=0.807, val_lr=0.01]    1%|          | 10/1000 [27:53<48:33:03, 176.55s/epoch, accuracy=0.71, loss=0.805, lr=0.01, val_accuracy=0.711, val_loss=0.802, val_lr=0.01]  1%|          | 11/1000 [30:26<46:31:57, 169.38s/epoch, accuracy=0.71, loss=0.805, lr=0.01, val_accuracy=0.71, val_loss=0.803, val_lr=0.01]   1%|          | 12/1000 [32:37<43:15:24, 157.62s/epoch, accuracy=0.711, loss=0.804, lr=0.01, val_accuracy=0.71, val_loss=0.809, val_lr=0.01]  1%|▏         | 13/1000 [34:47<40:57:46, 149.41s/epoch, accuracy=0.71, loss=0.804, lr=0.01, val_accuracy=0.711, val_loss=0.805, val_lr=0.01]  1%|▏         | 14/1000 [36:58<39:21:51, 143.72s/epoch, accuracy=0.711, loss=0.803, lr=0.01, val_accuracy=0.71, val_loss=0.811, val_lr=0.01]  2%|▏         | 15/1000 [39:07<38:10:01, 139.49s/epoch, accuracy=0.711, loss=0.802, lr=0.01, val_accuracy=0.712, val_loss=0.806, val_lr=0.01]  2%|▏         | 16/1000 [41:16<37:16:24, 136.37s/epoch, accuracy=0.711, loss=0.802, lr=0.01, val_accuracy=0.713, val_loss=0.801, val_lr=0.01]  2%|▏         | 17/1000 [43:25<36:35:44, 134.02s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.713, val_loss=0.801, val_lr=0.01]  2%|▏         | 18/1000 [45:34<36:07:51, 132.46s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.713, val_loss=0.798, val_lr=0.01]  2%|▏         | 19/1000 [47:43<35:48:57, 131.43s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.714, val_loss=0.797, val_lr=0.01]  2%|▏         | 20/1000 [49:51<35:31:37, 130.51s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.714, val_loss=0.798, val_lr=0.01]  2%|▏         | 21/1000 [52:00<35:19:46, 129.91s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.712, val_loss=0.808, val_lr=0.01]  2%|▏         | 22/1000 [54:09<35:13:09, 129.64s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.711, val_loss=0.804, val_lr=0.01]  2%|▏         | 23/1000 [56:18<35:10:40, 129.62s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.71, val_loss=0.808, val_lr=0.01]   2%|▏         | 24/1000 [58:28<35:10:24, 129.74s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.708, val_loss=0.814, val_lr=0.01]   2%|▎         | 25/1000 [1:00:39<35:10:58, 129.91s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.711, val_loss=0.805, val_lr=0.01]  3%|▎         | 26/1000 [1:02:49<35:09:54, 129.97s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.711, val_loss=0.805, val_lr=0.01]  3%|▎         | 27/1000 [1:04:59<35:08:48, 130.04s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.709, val_loss=0.806, val_lr=0.01]  3%|▎         | 28/1000 [1:07:09<35:07:27, 130.09s/epoch, accuracy=0.712, loss=0.799, lr=0.01, val_accuracy=0.71, val_loss=0.806, val_lr=0.01]  3%|▎         | 29/1000 [1:09:20<35:08:03, 130.26s/epoch, accuracy=0.712, loss=0.799, lr=0.01, val_accuracy=0.711, val_loss=0.806, val_lr=0.01]  3%|▎         | 30/1000 [1:11:33<35:18:53, 131.07s/epoch, accuracy=0.716, loss=0.788, lr=0.001, val_accuracy=0.716, val_loss=0.791, val_lr=0.001]  3%|▎         | 31/1000 [1:13:46<35:26:11, 131.65s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.716, val_loss=0.792, val_lr=0.001]  3%|▎         | 32/1000 [1:15:59<35:30:26, 132.05s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.714, val_loss=0.791, val_lr=0.001]  3%|▎         | 33/1000 [1:18:12<35:32:18, 132.30s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]   3%|▎         | 34/1000 [1:20:25<35:32:42, 132.47s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.716, val_loss=0.792, val_lr=0.001]  4%|▎         | 35/1000 [1:22:37<35:32:21, 132.58s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.716, val_loss=0.791, val_lr=0.001]  4%|▎         | 36/1000 [1:24:50<35:31:36, 132.67s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.715, val_loss=0.791, val_lr=0.001]  4%|▎         | 37/1000 [1:27:03<35:30:17, 132.73s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.791, val_lr=0.001]  4%|▍         | 38/1000 [1:29:16<35:29:02, 132.79s/epoch, accuracy=0.716, loss=0.787, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]   4%|▍         | 39/1000 [1:31:29<35:27:20, 132.82s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  4%|▍         | 40/1000 [1:33:42<35:26:07, 132.88s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.715, val_loss=0.79, val_lr=0.001]  4%|▍         | 41/1000 [1:35:55<35:24:38, 132.93s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.715, val_loss=0.79, val_lr=0.001]  4%|▍         | 42/1000 [1:38:08<35:22:43, 132.95s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.717, val_loss=0.79, val_lr=0.001]  4%|▍         | 43/1000 [1:40:21<35:20:04, 132.92s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  4%|▍         | 44/1000 [1:42:34<35:17:56, 132.92s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  4%|▍         | 45/1000 [1:44:47<35:15:43, 132.92s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  5%|▍         | 46/1000 [1:47:00<35:13:25, 132.92s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  5%|▍         | 47/1000 [1:49:12<35:10:26, 132.87s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]  5%|▍         | 48/1000 [1:51:25<35:07:38, 132.83s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.715, val_loss=0.79, val_lr=0.001]  5%|▍         | 49/1000 [1:53:38<35:05:52, 132.86s/epoch, accuracy=0.716, loss=0.786, lr=0.001, val_accuracy=0.715, val_loss=0.791, val_lr=0.001]  5%|▌         | 50/1000 [1:55:51<35:03:22, 132.84s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.79, val_lr=0.001]   5%|▌         | 51/1000 [1:58:04<35:01:28, 132.86s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.716, val_loss=0.789, val_lr=0.001]  5%|▌         | 52/1000 [2:00:17<34:58:41, 132.83s/epoch, accuracy=0.717, loss=0.786, lr=0.001, val_accuracy=0.715, val_loss=0.791, val_lr=0.001]  5%|▌         | 53/1000 [2:02:29<34:56:12, 132.81s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  5%|▌         | 54/1000 [2:04:42<34:54:02, 132.81s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  6%|▌         | 55/1000 [2:06:55<34:51:44, 132.81s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  6%|▌         | 56/1000 [2:09:08<34:49:16, 132.79s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  6%|▌         | 57/1000 [2:11:20<34:46:32, 132.76s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  6%|▌         | 58/1000 [2:13:33<34:44:19, 132.76s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  6%|▌         | 59/1000 [2:15:46<34:41:54, 132.75s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  6%|▌         | 60/1000 [2:17:59<34:39:53, 132.76s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.788, val_lr=0.0001]  6%|▌         | 61/1000 [2:20:11<34:37:36, 132.75s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  6%|▌         | 62/1000 [2:22:24<34:33:41, 132.65s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  6%|▋         | 63/1000 [2:24:36<34:29:40, 132.53s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.717, val_loss=0.789, val_lr=0.0001]  6%|▋         | 64/1000 [2:26:48<34:27:08, 132.51s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  6%|▋         | 65/1000 [2:29:01<34:24:29, 132.48s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  7%|▋         | 66/1000 [2:31:13<34:21:12, 132.41s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.788, val_lr=0.0001]  7%|▋         | 67/1000 [2:33:26<34:18:43, 132.39s/epoch, accuracy=0.717, loss=0.784, lr=0.0001, val_accuracy=0.716, val_loss=0.789, val_lr=0.0001]  7%|▋         | 68/1000 [2:35:38<34:15:52, 132.35s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.717, val_loss=0.788, val_lr=1e-5]      7%|▋         | 69/1000 [2:37:50<34:13:31, 132.34s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  7%|▋         | 70/1000 [2:40:02<34:10:57, 132.32s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.717, val_loss=0.788, val_lr=1e-5]  7%|▋         | 71/1000 [2:42:15<34:08:51, 132.33s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  7%|▋         | 72/1000 [2:44:27<34:06:35, 132.32s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  7%|▋         | 73/1000 [2:46:39<34:04:47, 132.35s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  7%|▋         | 74/1000 [2:48:52<34:02:56, 132.37s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  8%|▊         | 75/1000 [2:51:04<34:00:42, 132.37s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.716, val_loss=0.788, val_lr=1e-5]  8%|▊         | 76/1000 [2:53:16<33:58:04, 132.34s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.717, val_loss=0.788, val_lr=1e-5]  8%|▊         | 77/1000 [2:55:29<33:56:41, 132.40s/epoch, accuracy=0.717, loss=0.784, lr=1e-5, val_accuracy=0.717, val_loss=0.788, val_lr=1e-5]  8%|▊         | 78/1000 [2:57:41<33:54:09, 132.38s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.717, val_loss=0.788, val_lr=1e-6]  8%|▊         | 79/1000 [2:59:54<33:52:21, 132.40s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.717, val_loss=0.788, val_lr=1e-6]  8%|▊         | 80/1000 [3:02:06<33:50:21, 132.41s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.717, val_loss=0.788, val_lr=1e-6]  8%|▊         | 81/1000 [3:04:19<33:47:41, 132.38s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  8%|▊         | 82/1000 [3:06:31<33:46:01, 132.42s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  8%|▊         | 83/1000 [3:08:44<33:44:49, 132.49s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  8%|▊         | 84/1000 [3:10:56<33:43:42, 132.56s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  8%|▊         | 85/1000 [3:13:09<33:41:59, 132.59s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  9%|▊         | 86/1000 [3:15:22<33:40:25, 132.63s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  9%|▊         | 87/1000 [3:17:34<33:38:06, 132.62s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]  9%|▊         | 87/1000 [3:17:34<34:33:28, 136.26s/epoch, accuracy=0.717, loss=0.784, lr=1e-6, val_accuracy=0.716, val_loss=0.788, val_lr=1e-6]
