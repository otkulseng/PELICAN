2024-05-29 23:03:59.821117: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 23:03:59.875717: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 23:04:00.111759: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 23:04:02.529344: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 23:04:14.095180: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 5)      │            40 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 10)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │           704 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 64)             │         4,160 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_4 (Dense)                 │ (None, 5)              │           165 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 7,149 (27.93 KB)
 Trainable params: 7,149 (27.93 KB)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [02:50<47:16:14, 170.35s/epoch, accuracy=0.683, loss=0.883, lr=0.01, val_accuracy=0.705, val_loss=0.833, val_lr=0.01]  0%|          | 2/1000 [05:34<46:09:43, 166.52s/epoch, accuracy=0.702, loss=0.834, lr=0.01, val_accuracy=0.693, val_loss=0.848, val_lr=0.01]  0%|          | 3/1000 [08:17<45:43:14, 165.09s/epoch, accuracy=0.704, loss=0.823, lr=0.01, val_accuracy=0.706, val_loss=0.818, val_lr=0.01]  0%|          | 4/1000 [11:02<45:36:22, 164.84s/epoch, accuracy=0.707, loss=0.815, lr=0.01, val_accuracy=0.71, val_loss=0.808, val_lr=0.01]   0%|          | 5/1000 [13:47<45:39:55, 165.22s/epoch, accuracy=0.708, loss=0.812, lr=0.01, val_accuracy=0.711, val_loss=0.807, val_lr=0.01]  1%|          | 6/1000 [16:33<45:40:06, 165.40s/epoch, accuracy=0.709, loss=0.808, lr=0.01, val_accuracy=0.71, val_loss=0.807, val_lr=0.01]   1%|          | 7/1000 [19:19<45:40:48, 165.61s/epoch, accuracy=0.709, loss=0.806, lr=0.01, val_accuracy=0.71, val_loss=0.803, val_lr=0.01]  1%|          | 8/1000 [22:06<45:42:41, 165.89s/epoch, accuracy=0.71, loss=0.804, lr=0.01, val_accuracy=0.71, val_loss=0.803, val_lr=0.01]   1%|          | 9/1000 [24:52<45:39:54, 165.89s/epoch, accuracy=0.711, loss=0.803, lr=0.01, val_accuracy=0.711, val_loss=0.803, val_lr=0.01]  1%|          | 10/1000 [27:39<45:44:01, 166.30s/epoch, accuracy=0.711, loss=0.802, lr=0.01, val_accuracy=0.713, val_loss=0.799, val_lr=0.01]  1%|          | 11/1000 [30:26<45:44:42, 166.51s/epoch, accuracy=0.711, loss=0.801, lr=0.01, val_accuracy=0.712, val_loss=0.801, val_lr=0.01]  1%|          | 12/1000 [33:13<45:43:02, 166.58s/epoch, accuracy=0.711, loss=0.801, lr=0.01, val_accuracy=0.715, val_loss=0.794, val_lr=0.01]  1%|▏         | 13/1000 [35:59<45:41:25, 166.65s/epoch, accuracy=0.711, loss=0.801, lr=0.01, val_accuracy=0.714, val_loss=0.797, val_lr=0.01]  1%|▏         | 14/1000 [38:46<45:39:22, 166.70s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.712, val_loss=0.803, val_lr=0.01]    2%|▏         | 15/1000 [41:33<45:36:42, 166.70s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.705, val_loss=0.816, val_lr=0.01]  2%|▏         | 16/1000 [44:20<45:34:50, 166.76s/epoch, accuracy=0.712, loss=0.8, lr=0.01, val_accuracy=0.699, val_loss=0.834, val_lr=0.01]  2%|▏         | 17/1000 [47:07<45:32:20, 166.78s/epoch, accuracy=0.712, loss=0.799, lr=0.01, val_accuracy=0.715, val_loss=0.793, val_lr=0.01]  2%|▏         | 18/1000 [49:53<45:29:58, 166.80s/epoch, accuracy=0.712, loss=0.799, lr=0.01, val_accuracy=0.714, val_loss=0.797, val_lr=0.01]  2%|▏         | 19/1000 [52:41<45:29:11, 166.92s/epoch, accuracy=0.713, loss=0.798, lr=0.01, val_accuracy=0.715, val_loss=0.796, val_lr=0.01]  2%|▏         | 20/1000 [55:28<45:27:30, 166.99s/epoch, accuracy=0.712, loss=0.799, lr=0.01, val_accuracy=0.713, val_loss=0.799, val_lr=0.01]  2%|▏         | 21/1000 [58:14<45:21:53, 166.82s/epoch, accuracy=0.712, loss=0.798, lr=0.01, val_accuracy=0.714, val_loss=0.796, val_lr=0.01]  2%|▏         | 22/1000 [1:01:00<45:12:43, 166.42s/epoch, accuracy=0.712, loss=0.798, lr=0.01, val_accuracy=0.714, val_loss=0.798, val_lr=0.01]  2%|▏         | 23/1000 [1:03:45<45:03:36, 166.03s/epoch, accuracy=0.713, loss=0.798, lr=0.01, val_accuracy=0.714, val_loss=0.796, val_lr=0.01]  2%|▏         | 24/1000 [1:06:31<44:59:47, 165.97s/epoch, accuracy=0.713, loss=0.798, lr=0.01, val_accuracy=0.715, val_loss=0.794, val_lr=0.01]  2%|▎         | 25/1000 [1:09:16<44:53:35, 165.76s/epoch, accuracy=0.713, loss=0.797, lr=0.01, val_accuracy=0.715, val_loss=0.795, val_lr=0.01]  3%|▎         | 26/1000 [1:12:01<44:49:45, 165.69s/epoch, accuracy=0.713, loss=0.797, lr=0.01, val_accuracy=0.715, val_loss=0.793, val_lr=0.01]  3%|▎         | 27/1000 [1:14:47<44:46:05, 165.64s/epoch, accuracy=0.713, loss=0.798, lr=0.01, val_accuracy=0.714, val_loss=0.795, val_lr=0.01]  3%|▎         | 28/1000 [1:17:32<44:42:38, 165.60s/epoch, accuracy=0.713, loss=0.797, lr=0.01, val_accuracy=0.715, val_loss=0.793, val_lr=0.01]  3%|▎         | 29/1000 [1:20:18<44:39:38, 165.58s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.712, val_loss=0.801, val_lr=0.01]  3%|▎         | 30/1000 [1:23:04<44:37:09, 165.60s/epoch, accuracy=0.714, loss=0.796, lr=0.01, val_accuracy=0.714, val_loss=0.795, val_lr=0.01]  3%|▎         | 31/1000 [1:25:49<44:32:15, 165.46s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.711, val_loss=0.804, val_lr=0.01]  3%|▎         | 32/1000 [1:28:40<44:55:04, 167.05s/epoch, accuracy=0.713, loss=0.797, lr=0.01, val_accuracy=0.715, val_loss=0.795, val_lr=0.01]  3%|▎         | 33/1000 [1:31:29<45:02:06, 167.66s/epoch, accuracy=0.713, loss=0.796, lr=0.01, val_accuracy=0.715, val_loss=0.794, val_lr=0.01]  3%|▎         | 34/1000 [1:34:21<45:21:45, 169.05s/epoch, accuracy=0.713, loss=0.796, lr=0.01, val_accuracy=0.715, val_loss=0.793, val_lr=0.01]  4%|▎         | 35/1000 [1:37:12<45:30:35, 169.78s/epoch, accuracy=0.714, loss=0.796, lr=0.01, val_accuracy=0.715, val_loss=0.794, val_lr=0.01]  4%|▎         | 36/1000 [1:40:03<45:30:39, 169.96s/epoch, accuracy=0.713, loss=0.796, lr=0.01, val_accuracy=0.715, val_loss=0.794, val_lr=0.01]  4%|▎         | 37/1000 [1:42:53<45:30:23, 170.12s/epoch, accuracy=0.718, loss=0.785, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  4%|▍         | 38/1000 [1:45:44<45:31:15, 170.35s/epoch, accuracy=0.718, loss=0.784, lr=0.001, val_accuracy=0.717, val_loss=0.785, val_lr=0.001]  4%|▍         | 39/1000 [1:48:35<45:32:42, 170.62s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.717, val_loss=0.785, val_lr=0.001]  4%|▍         | 40/1000 [1:51:26<45:31:40, 170.73s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  4%|▍         | 41/1000 [1:54:18<45:31:28, 170.89s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  4%|▍         | 42/1000 [1:57:09<45:29:12, 170.93s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.717, val_loss=0.785, val_lr=0.001]  4%|▍         | 43/1000 [1:59:59<45:23:44, 170.77s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  4%|▍         | 44/1000 [2:02:49<45:18:58, 170.65s/epoch, accuracy=0.718, loss=0.783, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  4%|▍         | 45/1000 [2:05:41<45:20:22, 170.91s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  5%|▍         | 46/1000 [2:08:32<45:17:20, 170.90s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  5%|▍         | 47/1000 [2:11:23<45:15:47, 170.98s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.717, val_loss=0.787, val_lr=0.001]  5%|▍         | 48/1000 [2:14:15<45:15:56, 171.17s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  5%|▍         | 49/1000 [2:17:06<45:11:53, 171.10s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  5%|▌         | 50/1000 [2:19:56<45:06:14, 170.92s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.783, val_lr=0.001]  5%|▌         | 51/1000 [2:22:47<45:05:33, 171.06s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  5%|▌         | 52/1000 [2:25:38<45:02:05, 171.02s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.717, val_loss=0.786, val_lr=0.001]  5%|▌         | 53/1000 [2:28:29<44:58:23, 170.96s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.783, val_lr=0.001]  5%|▌         | 54/1000 [2:31:20<44:56:01, 171.00s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  6%|▌         | 55/1000 [2:34:11<44:53:05, 170.99s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  6%|▌         | 56/1000 [2:37:02<44:51:03, 171.04s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  6%|▌         | 57/1000 [2:39:53<44:45:36, 170.88s/epoch, accuracy=0.718, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  6%|▌         | 58/1000 [2:42:44<44:41:23, 170.79s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  6%|▌         | 59/1000 [2:45:34<44:35:58, 170.63s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.783, val_lr=0.001]  6%|▌         | 60/1000 [2:48:25<44:34:13, 170.70s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  6%|▌         | 61/1000 [2:51:16<44:33:25, 170.83s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  6%|▌         | 62/1000 [2:54:07<44:33:09, 170.99s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.783, val_lr=0.001]  6%|▋         | 63/1000 [2:56:58<44:29:51, 170.96s/epoch, accuracy=0.718, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  6%|▋         | 64/1000 [2:59:49<44:29:20, 171.11s/epoch, accuracy=0.718, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  6%|▋         | 65/1000 [3:02:41<44:26:14, 171.10s/epoch, accuracy=0.718, loss=0.781, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  7%|▋         | 66/1000 [3:05:31<44:22:06, 171.01s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  7%|▋         | 67/1000 [3:08:22<44:18:58, 171.00s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.718, val_loss=0.784, val_lr=0.001]  7%|▋         | 68/1000 [3:11:13<44:13:36, 170.83s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  7%|▋         | 69/1000 [3:14:00<43:54:46, 169.80s/epoch, accuracy=0.718, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  7%|▋         | 70/1000 [3:16:46<43:31:29, 168.48s/epoch, accuracy=0.718, loss=0.781, lr=0.001, val_accuracy=0.719, val_loss=0.783, val_lr=0.001]  7%|▋         | 71/1000 [3:19:32<43:16:57, 167.73s/epoch, accuracy=0.719, loss=0.781, lr=0.001, val_accuracy=0.718, val_loss=0.783, val_lr=0.001]  7%|▋         | 72/1000 [3:22:17<43:05:08, 167.14s/epoch, accuracy=0.719, loss=0.78, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  7%|▋         | 73/1000 [3:25:03<42:55:40, 166.71s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  7%|▋         | 74/1000 [3:27:48<42:45:09, 166.21s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 75/1000 [3:30:33<42:35:58, 165.79s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 76/1000 [3:33:18<42:30:23, 165.61s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 77/1000 [3:36:03<42:26:33, 165.54s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 78/1000 [3:38:48<42:21:35, 165.40s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 79/1000 [3:41:33<42:16:59, 165.28s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 80/1000 [3:44:19<42:13:17, 165.22s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 81/1000 [3:47:04<42:09:46, 165.16s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 82/1000 [3:49:48<42:03:34, 164.94s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 83/1000 [3:52:32<41:57:23, 164.71s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 84/1000 [3:55:16<41:51:51, 164.53s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  8%|▊         | 85/1000 [3:58:00<41:46:28, 164.36s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  9%|▊         | 86/1000 [4:00:44<41:42:57, 164.31s/epoch, accuracy=0.719, loss=0.779, lr=0.0001, val_accuracy=0.719, val_loss=0.782, val_lr=0.0001]  9%|▊         | 87/1000 [4:03:28<41:36:30, 164.06s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]      9%|▉         | 88/1000 [4:06:12<41:34:16, 164.10s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 89/1000 [4:08:56<41:31:58, 164.13s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 90/1000 [4:11:40<41:28:54, 164.10s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 91/1000 [4:14:24<41:24:34, 164.00s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 92/1000 [4:17:08<41:22:31, 164.04s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 93/1000 [4:19:52<41:18:22, 163.95s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5]  9%|▉         | 94/1000 [4:22:36<41:14:21, 163.86s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5] 10%|▉         | 95/1000 [4:25:19<41:11:05, 163.83s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5] 10%|▉         | 96/1000 [4:28:03<41:07:35, 163.78s/epoch, accuracy=0.719, loss=0.779, lr=1e-5, val_accuracy=0.719, val_loss=0.782, val_lr=1e-5] 10%|▉         | 97/1000 [4:30:46<41:02:44, 163.64s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|▉         | 98/1000 [4:33:30<40:59:39, 163.61s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|▉         | 99/1000 [4:36:14<40:57:32, 163.65s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 100/1000 [4:38:57<40:55:11, 163.68s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 101/1000 [4:41:40<40:48:24, 163.41s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 102/1000 [4:44:24<40:47:21, 163.52s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 103/1000 [4:47:08<40:45:39, 163.59s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 104/1000 [4:49:51<40:40:12, 163.41s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 10%|█         | 105/1000 [4:52:34<40:38:42, 163.49s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 11%|█         | 106/1000 [4:55:18<40:37:31, 163.59s/epoch, accuracy=0.719, loss=0.779, lr=1e-6, val_accuracy=0.719, val_loss=0.782, val_lr=1e-6] 11%|█         | 107/1000 [4:58:01<40:32:43, 163.45s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7] 11%|█         | 108/1000 [5:00:45<40:31:22, 163.55s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7] 11%|█         | 109/1000 [5:03:29<40:28:37, 163.54s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7] 11%|█         | 110/1000 [5:06:12<40:24:57, 163.48s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7] 11%|█         | 111/1000 [5:08:55<40:20:38, 163.37s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7] 11%|█         | 111/1000 [5:08:55<41:14:12, 166.99s/epoch, accuracy=0.719, loss=0.779, lr=1e-7, val_accuracy=0.719, val_loss=0.782, val_lr=1e-7]
