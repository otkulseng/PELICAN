2024-05-29 20:13:22.748761: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 20:13:22.802012: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 20:13:23.056221: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 20:13:25.294150: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 20:13:34.773748: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 3)      │            24 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 6)              │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │           448 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 64)             │         4,160 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_4 (Dense)                 │ (None, 5)              │           165 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 6,877 (26.86 KB)
 Trainable params: 6,877 (26.86 KB)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [01:53<31:28:00, 113.39s/epoch, accuracy=0.661, loss=0.924, lr=0.01, val_accuracy=0.693, val_loss=0.851, val_lr=0.01]  0%|          | 2/1000 [03:32<29:01:32, 104.70s/epoch, accuracy=0.692, loss=0.853, lr=0.01, val_accuracy=0.698, val_loss=0.837, val_lr=0.01]  0%|          | 3/1000 [05:12<28:24:08, 102.56s/epoch, accuracy=0.694, loss=0.844, lr=0.01, val_accuracy=0.692, val_loss=0.851, val_lr=0.01]  0%|          | 4/1000 [06:52<28:05:36, 101.54s/epoch, accuracy=0.696, loss=0.839, lr=0.01, val_accuracy=0.7, val_loss=0.832, val_lr=0.01]    0%|          | 5/1000 [08:31<27:54:30, 100.98s/epoch, accuracy=0.696, loss=0.837, lr=0.01, val_accuracy=0.694, val_loss=0.85, val_lr=0.01]  1%|          | 6/1000 [10:11<27:47:26, 100.65s/epoch, accuracy=0.696, loss=0.835, lr=0.01, val_accuracy=0.699, val_loss=0.827, val_lr=0.01]  1%|          | 7/1000 [11:51<27:42:10, 100.43s/epoch, accuracy=0.697, loss=0.833, lr=0.01, val_accuracy=0.693, val_loss=0.85, val_lr=0.01]   1%|          | 8/1000 [13:31<27:38:17, 100.30s/epoch, accuracy=0.698, loss=0.831, lr=0.01, val_accuracy=0.698, val_loss=0.834, val_lr=0.01]  1%|          | 9/1000 [15:11<27:34:52, 100.19s/epoch, accuracy=0.698, loss=0.83, lr=0.01, val_accuracy=0.699, val_loss=0.833, val_lr=0.01]   1%|          | 10/1000 [16:51<27:31:49, 100.11s/epoch, accuracy=0.698, loss=0.829, lr=0.01, val_accuracy=0.702, val_loss=0.825, val_lr=0.01]  1%|          | 11/1000 [18:31<27:29:57, 100.10s/epoch, accuracy=0.698, loss=0.829, lr=0.01, val_accuracy=0.7, val_loss=0.827, val_lr=0.01]    1%|          | 12/1000 [20:12<27:28:20, 100.10s/epoch, accuracy=0.698, loss=0.828, lr=0.01, val_accuracy=0.7, val_loss=0.824, val_lr=0.01]  1%|▏         | 13/1000 [21:52<27:27:09, 100.13s/epoch, accuracy=0.699, loss=0.827, lr=0.01, val_accuracy=0.702, val_loss=0.821, val_lr=0.01]  1%|▏         | 14/1000 [23:32<27:25:44, 100.15s/epoch, accuracy=0.699, loss=0.827, lr=0.01, val_accuracy=0.69, val_loss=0.857, val_lr=0.01]   2%|▏         | 15/1000 [25:12<27:24:36, 100.18s/epoch, accuracy=0.699, loss=0.826, lr=0.01, val_accuracy=0.701, val_loss=0.826, val_lr=0.01]  2%|▏         | 16/1000 [26:52<27:22:43, 100.17s/epoch, accuracy=0.7, loss=0.826, lr=0.01, val_accuracy=0.701, val_loss=0.83, val_lr=0.01]     2%|▏         | 17/1000 [28:32<27:20:31, 100.13s/epoch, accuracy=0.7, loss=0.824, lr=0.01, val_accuracy=0.701, val_loss=0.828, val_lr=0.01]  2%|▏         | 18/1000 [30:12<27:18:32, 100.11s/epoch, accuracy=0.7, loss=0.825, lr=0.01, val_accuracy=0.704, val_loss=0.82, val_lr=0.01]   2%|▏         | 19/1000 [31:53<27:16:41, 100.10s/epoch, accuracy=0.7, loss=0.824, lr=0.01, val_accuracy=0.701, val_loss=0.821, val_lr=0.01]  2%|▏         | 20/1000 [33:33<27:15:08, 100.11s/epoch, accuracy=0.701, loss=0.823, lr=0.01, val_accuracy=0.701, val_loss=0.825, val_lr=0.01]  2%|▏         | 21/1000 [35:13<27:12:42, 100.06s/epoch, accuracy=0.701, loss=0.822, lr=0.01, val_accuracy=0.704, val_loss=0.819, val_lr=0.01]  2%|▏         | 22/1000 [36:51<27:03:22, 99.59s/epoch, accuracy=0.701, loss=0.822, lr=0.01, val_accuracy=0.702, val_loss=0.826, val_lr=0.01]   2%|▏         | 23/1000 [38:29<26:54:50, 99.17s/epoch, accuracy=0.702, loss=0.822, lr=0.01, val_accuracy=0.705, val_loss=0.816, val_lr=0.01]  2%|▏         | 24/1000 [40:08<26:48:26, 98.88s/epoch, accuracy=0.702, loss=0.821, lr=0.01, val_accuracy=0.704, val_loss=0.82, val_lr=0.01]   2%|▎         | 25/1000 [41:48<26:56:19, 99.47s/epoch, accuracy=0.702, loss=0.821, lr=0.01, val_accuracy=0.704, val_loss=0.817, val_lr=0.01]  3%|▎         | 26/1000 [43:31<27:08:07, 100.30s/epoch, accuracy=0.702, loss=0.821, lr=0.01, val_accuracy=0.701, val_loss=0.825, val_lr=0.01]  3%|▎         | 27/1000 [45:13<27:17:15, 100.96s/epoch, accuracy=0.702, loss=0.821, lr=0.01, val_accuracy=0.7, val_loss=0.827, val_lr=0.01]    3%|▎         | 28/1000 [46:56<27:22:49, 101.41s/epoch, accuracy=0.702, loss=0.82, lr=0.01, val_accuracy=0.706, val_loss=0.818, val_lr=0.01]  3%|▎         | 29/1000 [48:38<27:26:28, 101.74s/epoch, accuracy=0.702, loss=0.82, lr=0.01, val_accuracy=0.702, val_loss=0.823, val_lr=0.01]  3%|▎         | 30/1000 [50:21<27:30:25, 102.09s/epoch, accuracy=0.702, loss=0.821, lr=0.01, val_accuracy=0.703, val_loss=0.824, val_lr=0.01]  3%|▎         | 31/1000 [52:04<27:31:05, 102.24s/epoch, accuracy=0.703, loss=0.82, lr=0.01, val_accuracy=0.706, val_loss=0.819, val_lr=0.01]   3%|▎         | 32/1000 [53:46<27:30:36, 102.31s/epoch, accuracy=0.702, loss=0.82, lr=0.01, val_accuracy=0.705, val_loss=0.819, val_lr=0.01]  3%|▎         | 33/1000 [55:29<27:30:38, 102.42s/epoch, accuracy=0.702, loss=0.82, lr=0.01, val_accuracy=0.704, val_loss=0.821, val_lr=0.01]  3%|▎         | 34/1000 [57:12<27:32:32, 102.64s/epoch, accuracy=0.702, loss=0.82, lr=0.01, val_accuracy=0.705, val_loss=0.817, val_lr=0.01]  4%|▎         | 35/1000 [58:55<27:31:09, 102.66s/epoch, accuracy=0.703, loss=0.82, lr=0.01, val_accuracy=0.702, val_loss=0.831, val_lr=0.01]  4%|▎         | 36/1000 [1:00:37<27:29:51, 102.69s/epoch, accuracy=0.706, loss=0.809, lr=0.001, val_accuracy=0.706, val_loss=0.811, val_lr=0.001]  4%|▎         | 37/1000 [1:02:21<27:30:47, 102.85s/epoch, accuracy=0.707, loss=0.808, lr=0.001, val_accuracy=0.708, val_loss=0.809, val_lr=0.001]  4%|▍         | 38/1000 [1:04:04<27:30:33, 102.95s/epoch, accuracy=0.707, loss=0.808, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 39/1000 [1:05:46<27:27:32, 102.86s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 40/1000 [1:07:30<27:30:30, 103.16s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 41/1000 [1:09:13<27:24:57, 102.92s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 42/1000 [1:10:55<27:22:14, 102.85s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 43/1000 [1:12:39<27:22:21, 102.97s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.707, val_loss=0.81, val_lr=0.001]   4%|▍         | 44/1000 [1:14:21<27:19:33, 102.90s/epoch, accuracy=0.707, loss=0.807, lr=0.001, val_accuracy=0.708, val_loss=0.808, val_lr=0.001]  4%|▍         | 45/1000 [1:16:04<27:16:28, 102.82s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.808, val_lr=0.001]  5%|▍         | 46/1000 [1:17:47<27:14:18, 102.79s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.71, val_loss=0.807, val_lr=0.001]   5%|▍         | 47/1000 [1:19:29<27:11:30, 102.72s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.808, val_lr=0.001]  5%|▍         | 48/1000 [1:21:12<27:11:37, 102.83s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.71, val_loss=0.808, val_lr=0.001]   5%|▍         | 49/1000 [1:22:55<27:09:31, 102.81s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.809, val_lr=0.001]  5%|▌         | 50/1000 [1:24:37<27:05:34, 102.67s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.807, val_lr=0.001]  5%|▌         | 51/1000 [1:26:20<27:02:40, 102.59s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.71, val_loss=0.807, val_lr=0.001]   5%|▌         | 52/1000 [1:28:02<26:59:18, 102.49s/epoch, accuracy=0.707, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.809, val_lr=0.001]  5%|▌         | 53/1000 [1:29:44<26:57:09, 102.46s/epoch, accuracy=0.708, loss=0.806, lr=0.001, val_accuracy=0.709, val_loss=0.806, val_lr=0.001]  5%|▌         | 54/1000 [1:31:27<26:55:37, 102.47s/epoch, accuracy=0.708, loss=0.805, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 55/1000 [1:33:10<26:55:49, 102.59s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.709, val_loss=0.806, val_lr=0.0001]  6%|▌         | 56/1000 [1:34:52<26:53:24, 102.55s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]   6%|▌         | 57/1000 [1:36:35<26:51:43, 102.55s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 58/1000 [1:38:17<26:48:30, 102.45s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 59/1000 [1:39:59<26:46:34, 102.44s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 60/1000 [1:41:42<26:45:09, 102.46s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 61/1000 [1:43:25<26:46:59, 102.68s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▌         | 62/1000 [1:45:09<26:49:36, 102.96s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▋         | 63/1000 [1:46:51<26:45:57, 102.84s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▋         | 64/1000 [1:48:34<26:42:20, 102.71s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  6%|▋         | 65/1000 [1:50:16<26:39:41, 102.65s/epoch, accuracy=0.708, loss=0.804, lr=0.0001, val_accuracy=0.71, val_loss=0.806, val_lr=0.0001]  7%|▋         | 66/1000 [1:51:59<26:37:32, 102.63s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]      7%|▋         | 67/1000 [1:53:41<26:33:31, 102.48s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 68/1000 [1:55:23<26:30:04, 102.37s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 69/1000 [1:57:05<26:28:40, 102.39s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 70/1000 [1:58:47<26:25:16, 102.28s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 71/1000 [2:00:30<26:22:39, 102.22s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 72/1000 [2:02:12<26:20:44, 102.20s/epoch, accuracy=0.708, loss=0.804, lr=1e-5, val_accuracy=0.71, val_loss=0.806, val_lr=1e-5]  7%|▋         | 73/1000 [2:03:54<26:18:51, 102.19s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  7%|▋         | 74/1000 [2:05:36<26:15:38, 102.09s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 75/1000 [2:07:18<26:13:18, 102.05s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 76/1000 [2:08:59<26:08:30, 101.85s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 77/1000 [2:10:40<26:02:56, 101.60s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 78/1000 [2:12:21<25:58:09, 101.40s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 79/1000 [2:14:02<25:54:49, 101.29s/epoch, accuracy=0.708, loss=0.804, lr=1e-6, val_accuracy=0.71, val_loss=0.806, val_lr=1e-6]  8%|▊         | 80/1000 [2:15:43<25:51:30, 101.18s/epoch, accuracy=0.708, loss=0.804, lr=1e-7, val_accuracy=0.71, val_loss=0.806, val_lr=1e-7]  8%|▊         | 81/1000 [2:17:24<25:48:36, 101.11s/epoch, accuracy=0.708, loss=0.804, lr=1e-7, val_accuracy=0.71, val_loss=0.806, val_lr=1e-7]  8%|▊         | 82/1000 [2:19:05<25:46:23, 101.07s/epoch, accuracy=0.708, loss=0.804, lr=1e-7, val_accuracy=0.71, val_loss=0.806, val_lr=1e-7]  8%|▊         | 82/1000 [2:19:05<25:57:07, 101.77s/epoch, accuracy=0.708, loss=0.804, lr=1e-7, val_accuracy=0.71, val_loss=0.806, val_lr=1e-7]
