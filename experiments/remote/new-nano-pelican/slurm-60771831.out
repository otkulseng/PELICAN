2024-05-29 23:02:32.245306: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 23:02:32.294312: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 23:02:32.502852: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 23:02:34.646126: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 23:02:43.976769: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 5)      │            40 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 10)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │           704 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 64)             │         4,160 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_4 (Dense)                 │ (None, 5)              │           165 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 7,149 (27.93 KB)
 Trainable params: 7,149 (27.93 KB)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [02:08<35:34:03, 128.17s/epoch, accuracy=0.678, loss=0.886, lr=0.01, val_accuracy=0.695, val_loss=0.847, val_lr=0.01]  0%|          | 2/1000 [04:02<33:15:28, 119.97s/epoch, accuracy=0.698, loss=0.836, lr=0.01, val_accuracy=0.701, val_loss=0.827, val_lr=0.01]  0%|          | 3/1000 [06:08<33:59:04, 122.71s/epoch, accuracy=0.702, loss=0.824, lr=0.01, val_accuracy=0.704, val_loss=0.821, val_lr=0.01]  0%|          | 4/1000 [08:18<34:47:20, 125.74s/epoch, accuracy=0.705, loss=0.819, lr=0.01, val_accuracy=0.704, val_loss=0.821, val_lr=0.01]  0%|          | 5/1000 [10:31<35:27:06, 128.27s/epoch, accuracy=0.707, loss=0.815, lr=0.01, val_accuracy=0.702, val_loss=0.826, val_lr=0.01]  1%|          | 6/1000 [12:39<35:21:54, 128.08s/epoch, accuracy=0.708, loss=0.812, lr=0.01, val_accuracy=0.709, val_loss=0.811, val_lr=0.01]  1%|          | 7/1000 [14:46<35:15:08, 127.80s/epoch, accuracy=0.709, loss=0.81, lr=0.01, val_accuracy=0.712, val_loss=0.804, val_lr=0.01]   1%|          | 8/1000 [16:54<35:16:29, 128.01s/epoch, accuracy=0.71, loss=0.808, lr=0.01, val_accuracy=0.704, val_loss=0.822, val_lr=0.01]  1%|          | 9/1000 [19:03<35:16:18, 128.13s/epoch, accuracy=0.709, loss=0.807, lr=0.01, val_accuracy=0.711, val_loss=0.808, val_lr=0.01]  1%|          | 10/1000 [21:10<35:09:00, 127.82s/epoch, accuracy=0.711, loss=0.806, lr=0.01, val_accuracy=0.712, val_loss=0.802, val_lr=0.01]  1%|          | 11/1000 [23:19<35:12:35, 128.17s/epoch, accuracy=0.711, loss=0.805, lr=0.01, val_accuracy=0.712, val_loss=0.802, val_lr=0.01]  1%|          | 12/1000 [25:26<35:04:53, 127.83s/epoch, accuracy=0.711, loss=0.804, lr=0.01, val_accuracy=0.705, val_loss=0.824, val_lr=0.01]  1%|▏         | 13/1000 [27:43<35:48:40, 130.62s/epoch, accuracy=0.711, loss=0.804, lr=0.01, val_accuracy=0.714, val_loss=0.799, val_lr=0.01]  1%|▏         | 14/1000 [30:01<36:21:35, 132.75s/epoch, accuracy=0.712, loss=0.803, lr=0.01, val_accuracy=0.712, val_loss=0.8, val_lr=0.01]    2%|▏         | 15/1000 [31:56<34:51:58, 127.43s/epoch, accuracy=0.713, loss=0.801, lr=0.01, val_accuracy=0.708, val_loss=0.816, val_lr=0.01]  2%|▏         | 16/1000 [33:44<33:15:06, 121.65s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.712, val_loss=0.801, val_lr=0.01]  2%|▏         | 17/1000 [35:38<32:33:11, 119.22s/epoch, accuracy=0.712, loss=0.801, lr=0.01, val_accuracy=0.715, val_loss=0.799, val_lr=0.01]  2%|▏         | 18/1000 [37:33<32:10:33, 117.96s/epoch, accuracy=0.713, loss=0.8, lr=0.01, val_accuracy=0.716, val_loss=0.793, val_lr=0.01]    2%|▏         | 19/1000 [39:24<31:38:21, 116.11s/epoch, accuracy=0.713, loss=0.799, lr=0.01, val_accuracy=0.713, val_loss=0.799, val_lr=0.01]  2%|▏         | 20/1000 [41:12<30:56:48, 113.68s/epoch, accuracy=0.714, loss=0.798, lr=0.01, val_accuracy=0.716, val_loss=0.793, val_lr=0.01]  2%|▏         | 21/1000 [43:17<31:50:15, 117.07s/epoch, accuracy=0.713, loss=0.799, lr=0.01, val_accuracy=0.714, val_loss=0.799, val_lr=0.01]  2%|▏         | 22/1000 [45:29<32:58:49, 121.40s/epoch, accuracy=0.714, loss=0.798, lr=0.01, val_accuracy=0.714, val_loss=0.804, val_lr=0.01]  2%|▏         | 23/1000 [47:54<34:50:20, 128.37s/epoch, accuracy=0.714, loss=0.798, lr=0.01, val_accuracy=0.713, val_loss=0.8, val_lr=0.01]    2%|▏         | 24/1000 [50:12<35:38:44, 131.48s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.716, val_loss=0.797, val_lr=0.01]  2%|▎         | 25/1000 [52:20<35:17:01, 130.28s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.713, val_loss=0.802, val_lr=0.01]  3%|▎         | 26/1000 [54:14<33:58:20, 125.57s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.714, val_loss=0.8, val_lr=0.01]    3%|▎         | 27/1000 [56:01<32:24:27, 119.90s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.709, val_loss=0.803, val_lr=0.01]  3%|▎         | 28/1000 [57:59<32:14:29, 119.41s/epoch, accuracy=0.714, loss=0.797, lr=0.01, val_accuracy=0.714, val_loss=0.797, val_lr=0.01]  3%|▎         | 29/1000 [59:53<31:47:22, 117.86s/epoch, accuracy=0.718, loss=0.784, lr=0.001, val_accuracy=0.719, val_loss=0.788, val_lr=0.001]  3%|▎         | 30/1000 [1:01:50<31:37:52, 117.39s/epoch, accuracy=0.719, loss=0.784, lr=0.001, val_accuracy=0.719, val_loss=0.787, val_lr=0.001]  3%|▎         | 31/1000 [1:03:49<31:45:57, 118.02s/epoch, accuracy=0.719, loss=0.783, lr=0.001, val_accuracy=0.719, val_loss=0.787, val_lr=0.001]  3%|▎         | 32/1000 [1:05:36<30:51:27, 114.76s/epoch, accuracy=0.719, loss=0.783, lr=0.001, val_accuracy=0.719, val_loss=0.786, val_lr=0.001]  3%|▎         | 33/1000 [1:07:25<30:17:38, 112.78s/epoch, accuracy=0.719, loss=0.783, lr=0.001, val_accuracy=0.719, val_loss=0.787, val_lr=0.001]  3%|▎         | 34/1000 [1:09:10<29:41:04, 110.63s/epoch, accuracy=0.719, loss=0.783, lr=0.001, val_accuracy=0.72, val_loss=0.785, val_lr=0.001]   4%|▎         | 35/1000 [1:10:50<28:46:29, 107.35s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.719, val_loss=0.786, val_lr=0.001]  4%|▎         | 36/1000 [1:12:30<28:10:18, 105.21s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.787, val_lr=0.001]  4%|▎         | 37/1000 [1:14:10<27:41:55, 103.55s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.72, val_loss=0.785, val_lr=0.001]   4%|▍         | 38/1000 [1:15:50<27:22:07, 102.42s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.719, val_loss=0.785, val_lr=0.001]  4%|▍         | 39/1000 [1:17:29<27:04:46, 101.44s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.719, val_loss=0.787, val_lr=0.001]  4%|▍         | 40/1000 [1:19:11<27:07:06, 101.69s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.72, val_loss=0.785, val_lr=0.001]   4%|▍         | 41/1000 [1:20:59<27:34:11, 103.49s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.785, val_lr=0.001]  4%|▍         | 42/1000 [1:22:45<27:46:13, 104.36s/epoch, accuracy=0.72, loss=0.782, lr=0.001, val_accuracy=0.72, val_loss=0.786, val_lr=0.001]    4%|▍         | 43/1000 [1:24:32<27:57:25, 105.17s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.718, val_loss=0.787, val_lr=0.001]  4%|▍         | 44/1000 [1:26:15<27:44:59, 104.50s/epoch, accuracy=0.719, loss=0.782, lr=0.001, val_accuracy=0.719, val_loss=0.785, val_lr=0.001]  4%|▍         | 45/1000 [1:27:59<27:41:39, 104.40s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]   5%|▍         | 46/1000 [1:29:49<28:05:54, 106.03s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▍         | 47/1000 [1:31:42<28:36:46, 108.09s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▍         | 48/1000 [1:33:38<29:10:43, 110.34s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▍         | 49/1000 [1:35:33<29:35:20, 112.01s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▌         | 50/1000 [1:37:26<29:35:55, 112.16s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▌         | 51/1000 [1:39:15<29:19:18, 111.23s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▌         | 52/1000 [1:41:04<29:08:00, 110.63s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  5%|▌         | 53/1000 [1:42:53<28:58:31, 110.15s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.721, val_loss=0.784, val_lr=0.0001]  5%|▌         | 54/1000 [1:44:44<28:58:16, 110.25s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]   6%|▌         | 55/1000 [1:46:33<28:50:09, 109.85s/epoch, accuracy=0.72, loss=0.78, lr=0.0001, val_accuracy=0.72, val_loss=0.784, val_lr=0.0001]  6%|▌         | 56/1000 [1:48:22<28:45:10, 109.65s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]     6%|▌         | 57/1000 [1:50:17<29:08:45, 111.27s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▌         | 58/1000 [1:52:07<29:00:14, 110.84s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▌         | 59/1000 [1:53:58<29:02:22, 111.10s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▌         | 60/1000 [1:55:48<28:51:35, 110.53s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.721, val_loss=0.784, val_lr=1e-5]  6%|▌         | 61/1000 [1:57:38<28:50:09, 110.55s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]   6%|▌         | 62/1000 [1:59:28<28:44:57, 110.34s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▋         | 63/1000 [2:01:17<28:38:33, 110.05s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▋         | 64/1000 [2:03:07<28:33:29, 109.84s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  6%|▋         | 65/1000 [2:04:56<28:27:44, 109.59s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.721, val_loss=0.784, val_lr=1e-5]  7%|▋         | 66/1000 [2:06:45<28:23:55, 109.46s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]   7%|▋         | 67/1000 [2:08:34<28:20:39, 109.37s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.721, val_loss=0.784, val_lr=1e-5]  7%|▋         | 68/1000 [2:10:23<28:17:25, 109.28s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]   7%|▋         | 69/1000 [2:12:18<28:41:21, 110.94s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  7%|▋         | 70/1000 [2:14:14<29:01:07, 112.33s/epoch, accuracy=0.72, loss=0.779, lr=1e-5, val_accuracy=0.72, val_loss=0.784, val_lr=1e-5]  7%|▋         | 71/1000 [2:16:03<28:45:27, 111.44s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  7%|▋         | 72/1000 [2:17:52<28:33:26, 110.78s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  7%|▋         | 73/1000 [2:19:46<28:47:31, 111.81s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  7%|▋         | 74/1000 [2:21:39<28:49:38, 112.07s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 75/1000 [2:23:30<28:42:07, 111.71s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 76/1000 [2:25:21<28:35:25, 111.39s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 77/1000 [2:27:12<28:32:27, 111.32s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 78/1000 [2:29:09<28:56:07, 112.98s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 79/1000 [2:30:58<28:38:00, 111.92s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 80/1000 [2:32:46<28:16:36, 110.65s/epoch, accuracy=0.72, loss=0.779, lr=1e-6, val_accuracy=0.72, val_loss=0.784, val_lr=1e-6]  8%|▊         | 81/1000 [2:34:33<28:00:07, 109.69s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  8%|▊         | 82/1000 [2:36:21<27:50:24, 109.18s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  8%|▊         | 83/1000 [2:38:08<27:35:55, 108.35s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  8%|▊         | 84/1000 [2:39:55<27:29:41, 108.06s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  8%|▊         | 85/1000 [2:41:42<27:23:10, 107.75s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▊         | 86/1000 [2:43:29<27:17:01, 107.46s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▊         | 87/1000 [2:45:16<27:13:42, 107.36s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▉         | 88/1000 [2:47:04<27:16:41, 107.68s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▉         | 89/1000 [2:48:52<27:14:57, 107.68s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▉         | 90/1000 [2:50:44<27:33:35, 109.03s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]  9%|▉         | 90/1000 [2:50:44<28:46:25, 113.83s/epoch, accuracy=0.72, loss=0.779, lr=1e-7, val_accuracy=0.72, val_loss=0.784, val_lr=1e-7]
