2024-05-29 20:11:25.342808: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 20:11:25.500076: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-05-29 20:11:26.179162: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-05-29 20:11:29.690468: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-05-29 20:11:49.965358: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃ Layer (type)                    ┃ Output Shape           ┃       Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ input_layer (InputLayer)        │ (None, 32, 4)          │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ inner_product (InnerProduct)    │ (None, 32, 32, 1)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v2 (Lineq2v2)             │ (None, 32, 32, 7)      │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 32, 32, 3)      │            24 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lineq2v0 (Lineq2v0)             │ (None, 6)              │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │           448 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 32)             │         2,080 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_3 (Dense)                 │ (None, 5)              │           165 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 2,717 (10.61 KB)
 Trainable params: 2,717 (10.61 KB)
 Non-trainable params: 0 (0.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [02:30<41:46:07, 150.52s/epoch, accuracy=0.673, loss=0.903, lr=0.01, val_accuracy=0.699, val_loss=0.853, val_lr=0.01]  0%|          | 2/1000 [04:33<37:13:23, 134.27s/epoch, accuracy=0.698, loss=0.844, lr=0.01, val_accuracy=0.702, val_loss=0.832, val_lr=0.01]  0%|          | 3/1000 [06:26<34:30:31, 124.61s/epoch, accuracy=0.701, loss=0.833, lr=0.01, val_accuracy=0.707, val_loss=0.823, val_lr=0.01]  0%|          | 4/1000 [08:50<36:34:11, 132.18s/epoch, accuracy=0.704, loss=0.825, lr=0.01, val_accuracy=0.706, val_loss=0.827, val_lr=0.01]  0%|          | 5/1000 [10:58<36:07:27, 130.70s/epoch, accuracy=0.705, loss=0.821, lr=0.01, val_accuracy=0.709, val_loss=0.816, val_lr=0.01]  1%|          | 6/1000 [12:59<35:10:34, 127.40s/epoch, accuracy=0.706, loss=0.818, lr=0.01, val_accuracy=0.707, val_loss=0.819, val_lr=0.01]  1%|          | 7/1000 [14:59<34:27:06, 124.90s/epoch, accuracy=0.705, loss=0.817, lr=0.01, val_accuracy=0.709, val_loss=0.812, val_lr=0.01]  1%|          | 8/1000 [16:51<33:20:46, 121.01s/epoch, accuracy=0.707, loss=0.814, lr=0.01, val_accuracy=0.706, val_loss=0.818, val_lr=0.01]  1%|          | 9/1000 [19:09<34:42:42, 126.10s/epoch, accuracy=0.708, loss=0.813, lr=0.01, val_accuracy=0.71, val_loss=0.809, val_lr=0.01]   1%|          | 10/1000 [21:22<35:20:17, 128.50s/epoch, accuracy=0.707, loss=0.812, lr=0.01, val_accuracy=0.71, val_loss=0.808, val_lr=0.01]  1%|          | 11/1000 [23:31<35:18:01, 128.49s/epoch, accuracy=0.708, loss=0.811, lr=0.01, val_accuracy=0.708, val_loss=0.813, val_lr=0.01]  1%|          | 12/1000 [25:38<35:08:07, 128.02s/epoch, accuracy=0.708, loss=0.811, lr=0.01, val_accuracy=0.708, val_loss=0.814, val_lr=0.01]  1%|▏         | 13/1000 [27:37<34:19:06, 125.17s/epoch, accuracy=0.709, loss=0.811, lr=0.01, val_accuracy=0.711, val_loss=0.808, val_lr=0.01]  1%|▏         | 14/1000 [29:56<35:29:34, 129.59s/epoch, accuracy=0.709, loss=0.81, lr=0.01, val_accuracy=0.709, val_loss=0.819, val_lr=0.01]   2%|▏         | 15/1000 [32:13<36:03:54, 131.81s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.71, val_loss=0.811, val_lr=0.01]  2%|▏         | 16/1000 [34:24<35:54:52, 131.40s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.71, val_loss=0.813, val_lr=0.01]  2%|▏         | 17/1000 [36:32<35:37:21, 130.46s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.711, val_loss=0.806, val_lr=0.01]  2%|▏         | 18/1000 [38:31<34:37:52, 126.96s/epoch, accuracy=0.709, loss=0.808, lr=0.01, val_accuracy=0.71, val_loss=0.807, val_lr=0.01]   2%|▏         | 19/1000 [40:57<36:11:23, 132.81s/epoch, accuracy=0.709, loss=0.809, lr=0.01, val_accuracy=0.709, val_loss=0.809, val_lr=0.01]  2%|▏         | 20/1000 [43:11<36:13:14, 133.06s/epoch, accuracy=0.709, loss=0.808, lr=0.01, val_accuracy=0.713, val_loss=0.805, val_lr=0.01]  2%|▏         | 21/1000 [45:20<35:52:25, 131.92s/epoch, accuracy=0.71, loss=0.807, lr=0.01, val_accuracy=0.711, val_loss=0.808, val_lr=0.01]   2%|▏         | 22/1000 [47:27<35:25:31, 130.40s/epoch, accuracy=0.71, loss=0.807, lr=0.01, val_accuracy=0.712, val_loss=0.81, val_lr=0.01]   2%|▏         | 23/1000 [49:23<34:13:15, 126.10s/epoch, accuracy=0.71, loss=0.807, lr=0.01, val_accuracy=0.713, val_loss=0.804, val_lr=0.01]  2%|▏         | 24/1000 [51:48<35:41:21, 131.64s/epoch, accuracy=0.709, loss=0.807, lr=0.01, val_accuracy=0.706, val_loss=0.814, val_lr=0.01]  2%|▎         | 25/1000 [53:53<35:06:45, 129.65s/epoch, accuracy=0.709, loss=0.807, lr=0.01, val_accuracy=0.712, val_loss=0.807, val_lr=0.01]  3%|▎         | 26/1000 [55:56<34:35:18, 127.84s/epoch, accuracy=0.71, loss=0.807, lr=0.01, val_accuracy=0.707, val_loss=0.819, val_lr=0.01]   3%|▎         | 27/1000 [57:58<34:05:42, 126.15s/epoch, accuracy=0.709, loss=0.807, lr=0.01, val_accuracy=0.711, val_loss=0.81, val_lr=0.01]  3%|▎         | 28/1000 [59:54<33:12:43, 123.01s/epoch, accuracy=0.71, loss=0.805, lr=0.01, val_accuracy=0.712, val_loss=0.807, val_lr=0.01]  3%|▎         | 29/1000 [1:02:02<33:34:05, 124.45s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.704, val_loss=0.815, val_lr=0.01]  3%|▎         | 30/1000 [1:04:11<33:52:08, 125.70s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.714, val_loss=0.806, val_lr=0.01]  3%|▎         | 31/1000 [1:06:10<33:21:23, 123.93s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.712, val_loss=0.806, val_lr=0.01]  3%|▎         | 32/1000 [1:08:11<33:02:46, 122.90s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.709, val_loss=0.809, val_lr=0.01]  3%|▎         | 33/1000 [1:10:08<32:32:15, 121.13s/epoch, accuracy=0.71, loss=0.805, lr=0.01, val_accuracy=0.708, val_loss=0.814, val_lr=0.01]  3%|▎         | 34/1000 [1:12:03<32:02:07, 119.39s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.713, val_loss=0.803, val_lr=0.01]  4%|▎         | 35/1000 [1:14:16<33:03:55, 123.35s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.709, val_loss=0.81, val_lr=0.01]   4%|▎         | 36/1000 [1:16:16<32:45:44, 122.35s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.707, val_loss=0.816, val_lr=0.01]  4%|▎         | 37/1000 [1:18:15<32:29:50, 121.49s/epoch, accuracy=0.71, loss=0.806, lr=0.01, val_accuracy=0.712, val_loss=0.808, val_lr=0.01]  4%|▍         | 38/1000 [1:20:13<32:11:59, 120.50s/epoch, accuracy=0.713, loss=0.796, lr=0.001, val_accuracy=0.715, val_loss=0.798, val_lr=0.001]  4%|▍         | 39/1000 [1:22:03<31:16:00, 117.13s/epoch, accuracy=0.714, loss=0.795, lr=0.001, val_accuracy=0.714, val_loss=0.799, val_lr=0.001]  4%|▍         | 40/1000 [1:24:09<31:57:23, 119.84s/epoch, accuracy=0.714, loss=0.795, lr=0.001, val_accuracy=0.714, val_loss=0.798, val_lr=0.001]  4%|▍         | 41/1000 [1:26:07<31:47:08, 119.32s/epoch, accuracy=0.714, loss=0.795, lr=0.001, val_accuracy=0.715, val_loss=0.798, val_lr=0.001]  4%|▍         | 42/1000 [1:28:03<31:27:45, 118.23s/epoch, accuracy=0.713, loss=0.795, lr=0.001, val_accuracy=0.714, val_loss=0.798, val_lr=0.001]  4%|▍         | 43/1000 [1:30:00<31:23:30, 118.09s/epoch, accuracy=0.714, loss=0.795, lr=0.001, val_accuracy=0.715, val_loss=0.797, val_lr=0.001]  4%|▍         | 44/1000 [1:31:54<30:58:32, 116.65s/epoch, accuracy=0.713, loss=0.795, lr=0.001, val_accuracy=0.714, val_loss=0.798, val_lr=0.001]  4%|▍         | 45/1000 [1:33:57<31:28:55, 118.68s/epoch, accuracy=0.714, loss=0.795, lr=0.001, val_accuracy=0.715, val_loss=0.797, val_lr=0.001]  5%|▍         | 46/1000 [1:36:23<33:34:31, 126.70s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▍         | 47/1000 [1:38:39<34:16:31, 129.48s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▍         | 48/1000 [1:41:07<35:44:32, 135.16s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▍         | 49/1000 [1:43:31<36:25:35, 137.89s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▌         | 50/1000 [1:46:07<37:48:15, 143.26s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▌         | 51/1000 [1:48:48<39:11:00, 148.64s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▌         | 52/1000 [1:51:17<39:09:02, 148.67s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.797, val_lr=0.0001]  5%|▌         | 53/1000 [1:53:44<38:58:12, 148.14s/epoch, accuracy=0.714, loss=0.793, lr=0.0001, val_accuracy=0.715, val_loss=0.796, val_lr=0.0001]  5%|▌         | 54/1000 [1:55:56<37:38:05, 143.22s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]      6%|▌         | 55/1000 [1:58:49<40:00:14, 152.40s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 56/1000 [2:01:22<39:58:33, 152.45s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 57/1000 [2:03:49<39:31:47, 150.91s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 58/1000 [2:06:14<38:58:51, 148.97s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 59/1000 [2:08:44<39:02:03, 149.33s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 60/1000 [2:11:27<40:02:45, 153.37s/epoch, accuracy=0.714, loss=0.793, lr=1e-5, val_accuracy=0.715, val_loss=0.796, val_lr=1e-5]  6%|▌         | 61/1000 [2:13:56<39:42:07, 152.21s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  6%|▌         | 62/1000 [2:16:23<39:14:59, 150.64s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  6%|▋         | 63/1000 [2:18:40<38:08:54, 146.57s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  6%|▋         | 64/1000 [2:21:33<40:10:00, 154.49s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  6%|▋         | 65/1000 [2:24:05<39:55:55, 153.75s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  7%|▋         | 66/1000 [2:26:33<39:27:12, 152.07s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  7%|▋         | 67/1000 [2:28:56<38:40:01, 149.20s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]  7%|▋         | 67/1000 [2:28:56<34:34:02, 133.38s/epoch, accuracy=0.714, loss=0.793, lr=1e-6, val_accuracy=0.715, val_loss=0.796, val_lr=1e-6]
