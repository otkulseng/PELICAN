2024-06-08 17:35:44.680538: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-08 17:35:44.735694: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-08 17:35:44.971365: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-08 17:35:47.748082: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-06-08 17:35:58.900288: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected


Running train for /cluster/home/okulseng/PELICAN/experiments/_present/log-nano-pelican-mlp/conf-pelican-5/config.yml


Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 32, 4)     │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ inner_product       │ [(None, 32, 32,   │          0 │ input_layer[0][0] │
│ (InnerProduct)      │ 1), (None, 32,    │            │                   │
│                     │ 32, 1)]           │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ log_layer           │ (None, 32, 32, 1) │          1 │ inner_product[0]… │
│ (LogLayer)          │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalization │ (None, 32, 32, 1) │          4 │ log_layer[0][0]   │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v2 (Lineq2v2) │ (None, 32, 32, 6) │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ diag_bias_dense     │ (None, 32, 32, 3) │         24 │ lineq2v2[0][0]    │
│ (DiagBiasDense)     │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ multiply (Multiply) │ (None, 32, 32, 3) │          0 │ diag_bias_dense[… │
│                     │                   │            │ inner_product[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalizatio… │ (None, 32, 32, 3) │         12 │ multiply[0][0]    │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v0 (Lineq2v0) │ (None, 6)         │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 64)        │        448 │ lineq2v0[0][0]    │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense_1 (Dense)     │ (None, 32)        │      2,080 │ dense[0][0]       │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense_2 (Dense)     │ (None, 5)         │        165 │ dense_1[0][0]     │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 2,734 (10.68 KB)
 Trainable params: 2,726 (10.65 KB)
 Non-trainable params: 8 (32.00 B)
'LogLayer' object has no attribute 'calc_flops'
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [04:15<70:56:20, 255.64s/epoch, accuracy=0.602, loss=1.02, lr=0.002, val_accuracy=0.66, val_loss=0.927, val_lr=0.002]  0%|          | 2/1000 [08:25<69:59:36, 252.48s/epoch, accuracy=0.672, loss=0.895, lr=0.002, val_accuracy=0.678, val_loss=0.892, val_lr=0.002]  0%|          | 3/1000 [12:54<71:57:44, 259.84s/epoch, accuracy=0.682, loss=0.869, lr=0.002, val_accuracy=0.68, val_loss=0.888, val_lr=0.002]   0%|          | 4/1000 [16:59<70:18:41, 254.14s/epoch, accuracy=0.683, loss=0.864, lr=0.002, val_accuracy=0.694, val_loss=0.845, val_lr=0.002]  0%|          | 5/1000 [20:59<68:46:49, 248.85s/epoch, accuracy=0.684, loss=0.861, lr=0.002, val_accuracy=0.689, val_loss=0.85, val_lr=0.002]   1%|          | 6/1000 [25:14<69:16:33, 250.90s/epoch, accuracy=0.685, loss=0.859, lr=0.002, val_accuracy=0.688, val_loss=0.857, val_lr=0.002]  1%|          | 7/1000 [29:28<69:28:36, 251.88s/epoch, accuracy=0.686, loss=0.857, lr=0.002, val_accuracy=0.693, val_loss=0.849, val_lr=0.002]  1%|          | 8/1000 [33:31<68:37:31, 249.04s/epoch, accuracy=0.686, loss=0.858, lr=0.002, val_accuracy=0.684, val_loss=0.846, val_lr=0.002]  1%|          | 9/1000 [37:33<67:58:51, 246.95s/epoch, accuracy=0.687, loss=0.855, lr=0.002, val_accuracy=0.696, val_loss=0.838, val_lr=0.002]  1%|          | 10/1000 [41:41<67:57:36, 247.13s/epoch, accuracy=0.687, loss=0.855, lr=0.002, val_accuracy=0.696, val_loss=0.843, val_lr=0.002]  1%|          | 11/1000 [45:51<68:08:43, 248.05s/epoch, accuracy=0.687, loss=0.854, lr=0.002, val_accuracy=0.698, val_loss=0.84, val_lr=0.002]   1%|          | 12/1000 [49:55<67:46:51, 246.97s/epoch, accuracy=0.688, loss=0.853, lr=0.002, val_accuracy=0.695, val_loss=0.84, val_lr=0.002]  1%|▏         | 13/1000 [53:58<67:24:21, 245.86s/epoch, accuracy=0.687, loss=0.853, lr=0.002, val_accuracy=0.695, val_loss=0.84, val_lr=0.002]  1%|▏         | 14/1000 [57:59<66:51:59, 244.14s/epoch, accuracy=0.688, loss=0.852, lr=0.002, val_accuracy=0.696, val_loss=0.84, val_lr=0.002]  2%|▏         | 15/1000 [1:01:55<66:09:40, 241.81s/epoch, accuracy=0.688, loss=0.853, lr=0.002, val_accuracy=0.698, val_loss=0.835, val_lr=0.002]  2%|▏         | 16/1000 [1:05:59<66:15:39, 242.42s/epoch, accuracy=0.688, loss=0.851, lr=0.002, val_accuracy=0.697, val_loss=0.837, val_lr=0.002]  2%|▏         | 17/1000 [1:10:00<66:02:57, 241.89s/epoch, accuracy=0.689, loss=0.851, lr=0.002, val_accuracy=0.697, val_loss=0.835, val_lr=0.002]  2%|▏         | 18/1000 [1:14:00<65:51:02, 241.41s/epoch, accuracy=0.689, loss=0.849, lr=0.002, val_accuracy=0.688, val_loss=0.852, val_lr=0.002]  2%|▏         | 19/1000 [1:18:11<66:34:49, 244.33s/epoch, accuracy=0.689, loss=0.849, lr=0.002, val_accuracy=0.699, val_loss=0.835, val_lr=0.002]  2%|▏         | 20/1000 [1:22:14<66:22:54, 243.85s/epoch, accuracy=0.689, loss=0.849, lr=0.002, val_accuracy=0.694, val_loss=0.838, val_lr=0.002]  2%|▏         | 21/1000 [1:26:08<65:33:11, 241.05s/epoch, accuracy=0.69, loss=0.849, lr=0.002, val_accuracy=0.697, val_loss=0.836, val_lr=0.002]   2%|▏         | 22/1000 [1:30:01<64:50:50, 238.70s/epoch, accuracy=0.689, loss=0.848, lr=0.002, val_accuracy=0.682, val_loss=0.859, val_lr=0.002]  2%|▏         | 23/1000 [1:33:56<64:27:57, 237.54s/epoch, accuracy=0.69, loss=0.848, lr=0.002, val_accuracy=0.694, val_loss=0.84, val_lr=0.002]    2%|▏         | 24/1000 [1:38:04<65:14:17, 240.63s/epoch, accuracy=0.69, loss=0.848, lr=0.002, val_accuracy=0.698, val_loss=0.836, val_lr=0.002]  2%|▎         | 25/1000 [1:42:01<64:49:55, 239.38s/epoch, accuracy=0.69, loss=0.847, lr=0.002, val_accuracy=0.692, val_loss=0.845, val_lr=0.002]  3%|▎         | 26/1000 [1:45:56<64:27:37, 238.25s/epoch, accuracy=0.69, loss=0.847, lr=0.002, val_accuracy=0.701, val_loss=0.828, val_lr=0.002]  3%|▎         | 27/1000 [1:49:49<63:59:12, 236.74s/epoch, accuracy=0.69, loss=0.846, lr=0.002, val_accuracy=0.688, val_loss=0.858, val_lr=0.002]  3%|▎         | 28/1000 [1:53:44<63:43:24, 236.01s/epoch, accuracy=0.69, loss=0.846, lr=0.002, val_accuracy=0.697, val_loss=0.834, val_lr=0.002]  3%|▎         | 29/1000 [1:57:43<63:55:18, 236.99s/epoch, accuracy=0.691, loss=0.845, lr=0.002, val_accuracy=0.702, val_loss=0.828, val_lr=0.002]  3%|▎         | 30/1000 [2:01:38<63:42:22, 236.44s/epoch, accuracy=0.691, loss=0.845, lr=0.002, val_accuracy=0.702, val_loss=0.829, val_lr=0.002]  3%|▎         | 31/1000 [2:05:35<63:38:54, 236.46s/epoch, accuracy=0.692, loss=0.844, lr=0.002, val_accuracy=0.696, val_loss=0.834, val_lr=0.002]  3%|▎         | 32/1000 [2:09:30<63:31:00, 236.22s/epoch, accuracy=0.691, loss=0.844, lr=0.002, val_accuracy=0.701, val_loss=0.83, val_lr=0.002]   3%|▎         | 33/1000 [2:13:30<63:41:31, 237.12s/epoch, accuracy=0.692, loss=0.843, lr=0.002, val_accuracy=0.701, val_loss=0.827, val_lr=0.002]  3%|▎         | 34/1000 [2:17:27<63:37:57, 237.14s/epoch, accuracy=0.692, loss=0.843, lr=0.002, val_accuracy=0.701, val_loss=0.827, val_lr=0.002]  4%|▎         | 35/1000 [2:21:29<63:59:26, 238.72s/epoch, accuracy=0.692, loss=0.843, lr=0.002, val_accuracy=0.698, val_loss=0.831, val_lr=0.002]  4%|▎         | 36/1000 [2:25:31<64:10:50, 239.68s/epoch, accuracy=0.693, loss=0.842, lr=0.002, val_accuracy=0.697, val_loss=0.838, val_lr=0.002]  4%|▎         | 37/1000 [2:29:42<64:59:32, 242.96s/epoch, accuracy=0.693, loss=0.842, lr=0.002, val_accuracy=0.697, val_loss=0.838, val_lr=0.002]  4%|▍         | 38/1000 [2:33:49<65:15:51, 244.23s/epoch, accuracy=0.695, loss=0.838, lr=0.002, val_accuracy=0.7, val_loss=0.826, val_lr=0.002]    4%|▍         | 39/1000 [2:37:57<65:32:47, 245.54s/epoch, accuracy=0.696, loss=0.836, lr=0.002, val_accuracy=0.702, val_loss=0.828, val_lr=0.002]  4%|▍         | 40/1000 [2:42:07<65:48:50, 246.80s/epoch, accuracy=0.701, loss=0.826, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  4%|▍         | 41/1000 [2:46:16<65:55:24, 247.47s/epoch, accuracy=0.702, loss=0.825, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  4%|▍         | 42/1000 [2:50:36<66:51:23, 251.24s/epoch, accuracy=0.701, loss=0.825, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  4%|▍         | 43/1000 [2:54:57<67:32:42, 254.09s/epoch, accuracy=0.702, loss=0.825, lr=0.0002, val_accuracy=0.707, val_loss=0.815, val_lr=0.0002]  4%|▍         | 44/1000 [2:59:16<67:49:48, 255.43s/epoch, accuracy=0.702, loss=0.824, lr=0.0002, val_accuracy=0.709, val_loss=0.812, val_lr=0.0002]  4%|▍         | 45/1000 [3:03:37<68:13:43, 257.20s/epoch, accuracy=0.702, loss=0.824, lr=0.0002, val_accuracy=0.709, val_loss=0.812, val_lr=0.0002]  5%|▍         | 46/1000 [3:07:53<68:04:45, 256.90s/epoch, accuracy=0.702, loss=0.824, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  5%|▍         | 47/1000 [3:12:15<68:23:35, 258.36s/epoch, accuracy=0.702, loss=0.824, lr=0.0002, val_accuracy=0.709, val_loss=0.812, val_lr=0.0002]  5%|▍         | 48/1000 [3:16:34<68:21:15, 258.48s/epoch, accuracy=0.702, loss=0.823, lr=0.0002, val_accuracy=0.709, val_loss=0.811, val_lr=0.0002]  5%|▍         | 49/1000 [3:21:04<69:11:55, 261.95s/epoch, accuracy=0.703, loss=0.823, lr=0.0002, val_accuracy=0.709, val_loss=0.813, val_lr=0.0002]  5%|▌         | 50/1000 [3:25:19<68:37:07, 260.03s/epoch, accuracy=0.703, loss=0.823, lr=0.0002, val_accuracy=0.709, val_loss=0.811, val_lr=0.0002]  5%|▌         | 51/1000 [3:29:38<68:28:11, 259.74s/epoch, accuracy=0.703, loss=0.823, lr=0.0002, val_accuracy=0.707, val_loss=0.815, val_lr=0.0002]  5%|▌         | 52/1000 [3:33:58<68:21:51, 259.61s/epoch, accuracy=0.703, loss=0.823, lr=0.0002, val_accuracy=0.71, val_loss=0.81, val_lr=0.0002]    5%|▌         | 53/1000 [3:38:15<68:06:35, 258.92s/epoch, accuracy=0.703, loss=0.822, lr=0.0002, val_accuracy=0.709, val_loss=0.812, val_lr=0.0002]  5%|▌         | 54/1000 [3:42:33<67:59:53, 258.77s/epoch, accuracy=0.703, loss=0.822, lr=0.0002, val_accuracy=0.71, val_loss=0.81, val_lr=0.0002]    6%|▌         | 55/1000 [3:46:53<68:01:18, 259.13s/epoch, accuracy=0.703, loss=0.822, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  6%|▌         | 56/1000 [3:51:12<67:52:56, 258.87s/epoch, accuracy=0.703, loss=0.822, lr=0.0002, val_accuracy=0.71, val_loss=0.81, val_lr=0.0002]    6%|▌         | 57/1000 [3:55:27<67:32:37, 257.85s/epoch, accuracy=0.704, loss=0.822, lr=0.0002, val_accuracy=0.709, val_loss=0.812, val_lr=0.0002]  6%|▌         | 58/1000 [3:59:35<66:42:08, 254.91s/epoch, accuracy=0.704, loss=0.821, lr=0.0002, val_accuracy=0.708, val_loss=0.815, val_lr=0.0002]  6%|▌         | 59/1000 [4:03:32<65:15:34, 249.66s/epoch, accuracy=0.704, loss=0.821, lr=0.0002, val_accuracy=0.71, val_loss=0.81, val_lr=0.0002]    6%|▌         | 60/1000 [4:07:38<64:51:03, 248.36s/epoch, accuracy=0.704, loss=0.821, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]  6%|▌         | 61/1000 [4:11:43<64:33:38, 247.52s/epoch, accuracy=0.704, loss=0.821, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]  6%|▌         | 62/1000 [4:15:55<64:46:38, 248.61s/epoch, accuracy=0.704, loss=0.821, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]  6%|▋         | 63/1000 [4:20:10<65:12:21, 250.52s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.711, val_loss=0.809, val_lr=0.0002]  6%|▋         | 64/1000 [4:24:21<65:10:50, 250.69s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.709, val_loss=0.811, val_lr=0.0002]  6%|▋         | 65/1000 [4:28:30<64:58:42, 250.18s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.71, val_loss=0.81, val_lr=0.0002]    7%|▋         | 66/1000 [4:32:44<65:14:53, 251.49s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]  7%|▋         | 67/1000 [4:36:51<64:50:56, 250.22s/epoch, accuracy=0.705, loss=0.82, lr=0.0002, val_accuracy=0.711, val_loss=0.809, val_lr=0.0002]  7%|▋         | 68/1000 [4:41:02<64:46:24, 250.20s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.711, val_loss=0.808, val_lr=0.0002]  7%|▋         | 69/1000 [4:45:12<64:43:03, 250.25s/epoch, accuracy=0.704, loss=0.82, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]   7%|▋         | 70/1000 [4:49:27<64:59:34, 251.59s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.711, val_loss=0.808, val_lr=0.0002]  7%|▋         | 71/1000 [4:53:32<64:28:51, 249.87s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.711, val_loss=0.808, val_lr=0.0002]  7%|▋         | 72/1000 [4:57:34<63:46:26, 247.40s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  7%|▋         | 73/1000 [5:01:37<63:22:41, 246.13s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.709, val_loss=0.811, val_lr=0.0002]  7%|▋         | 74/1000 [5:05:44<63:21:33, 246.32s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.711, val_loss=0.808, val_lr=0.0002]  8%|▊         | 75/1000 [5:09:43<62:42:58, 244.08s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.71, val_loss=0.808, val_lr=0.0002]   8%|▊         | 76/1000 [5:13:52<63:02:46, 245.63s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.708, val_loss=0.813, val_lr=0.0002]  8%|▊         | 77/1000 [5:18:02<63:17:45, 246.87s/epoch, accuracy=0.705, loss=0.819, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  8%|▊         | 78/1000 [5:22:11<63:21:23, 247.38s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  8%|▊         | 79/1000 [5:26:24<63:45:31, 249.22s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.711, val_loss=0.809, val_lr=0.0002]  8%|▊         | 80/1000 [5:30:33<63:38:33, 249.04s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  8%|▊         | 81/1000 [5:34:40<63:27:30, 248.59s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.712, val_loss=0.806, val_lr=0.0002]  8%|▊         | 82/1000 [5:38:50<63:27:19, 248.84s/epoch, accuracy=0.706, loss=0.818, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  8%|▊         | 83/1000 [5:42:58<63:22:52, 248.82s/epoch, accuracy=0.705, loss=0.818, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  8%|▊         | 84/1000 [5:47:08<63:22:09, 249.05s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.711, val_loss=0.808, val_lr=0.0002]  8%|▊         | 85/1000 [5:51:17<63:18:32, 249.08s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.806, val_lr=0.0002]  9%|▊         | 86/1000 [5:55:27<63:16:04, 249.19s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  9%|▊         | 87/1000 [5:59:34<63:03:45, 248.66s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.711, val_loss=0.806, val_lr=0.0002]  9%|▉         | 88/1000 [6:03:44<63:07:31, 249.18s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002]  9%|▉         | 89/1000 [6:07:51<62:49:59, 248.30s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.71, val_loss=0.809, val_lr=0.0002]   9%|▉         | 90/1000 [6:11:57<62:35:42, 247.63s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002]  9%|▉         | 91/1000 [6:15:58<62:02:01, 245.68s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002]  9%|▉         | 92/1000 [6:19:57<61:28:07, 243.71s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.806, val_lr=0.0002]  9%|▉         | 93/1000 [6:23:49<60:33:19, 240.35s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002]  9%|▉         | 94/1000 [6:27:40<59:45:06, 237.42s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.806, val_lr=0.0002] 10%|▉         | 95/1000 [6:31:30<59:07:50, 235.22s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|▉         | 96/1000 [6:35:22<58:50:34, 234.33s/epoch, accuracy=0.706, loss=0.817, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|▉         | 97/1000 [6:39:15<58:37:02, 233.69s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|▉         | 98/1000 [6:43:08<58:33:50, 233.74s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|▉         | 99/1000 [6:46:58<58:12:24, 232.57s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|█         | 100/1000 [6:50:50<58:04:58, 232.33s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.711, val_loss=0.806, val_lr=0.0002] 10%|█         | 101/1000 [6:54:41<57:53:06, 231.80s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.713, val_loss=0.804, val_lr=0.0002] 10%|█         | 102/1000 [6:58:29<57:36:12, 230.93s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|█         | 103/1000 [7:02:25<57:51:33, 232.21s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.713, val_loss=0.805, val_lr=0.0002] 10%|█         | 104/1000 [7:06:19<57:56:02, 232.77s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 10%|█         | 105/1000 [7:10:13<57:59:52, 233.29s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.712, val_loss=0.804, val_lr=0.0002] 11%|█         | 106/1000 [7:14:07<57:59:42, 233.54s/epoch, accuracy=0.707, loss=0.816, lr=0.0002, val_accuracy=0.711, val_loss=0.807, val_lr=0.0002] 11%|█         | 107/1000 [7:18:04<58:08:41, 234.40s/epoch, accuracy=0.707, loss=0.815, lr=0.0002, val_accuracy=0.712, val_loss=0.806, val_lr=0.0002] 11%|█         | 108/1000 [7:21:56<57:56:59, 233.88s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.713, val_loss=0.804, val_lr=0.0002] 11%|█         | 109/1000 [7:25:49<57:49:09, 233.61s/epoch, accuracy=0.706, loss=0.816, lr=0.0002, val_accuracy=0.713, val_loss=0.804, val_lr=0.0002] 11%|█         | 110/1000 [7:29:40<57:32:48, 232.77s/epoch, accuracy=0.707, loss=0.815, lr=0.0002, val_accuracy=0.713, val_loss=0.804, val_lr=0.0002] 11%|█         | 111/1000 [7:33:38<57:52:05, 234.34s/epoch, accuracy=0.707, loss=0.815, lr=0.0002, val_accuracy=0.712, val_loss=0.805, val_lr=0.0002] 11%|█         | 112/1000 [7:37:27<57:25:32, 232.81s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5]     11%|█▏        | 113/1000 [7:41:16<57:04:08, 231.62s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 11%|█▏        | 114/1000 [7:45:03<56:40:27, 230.28s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 115/1000 [7:48:50<56:21:26, 229.25s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 116/1000 [7:52:40<56:18:00, 229.28s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 117/1000 [7:56:28<56:12:08, 229.14s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 118/1000 [8:00:17<56:03:38, 228.82s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 119/1000 [8:04:04<55:53:45, 228.41s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 120/1000 [8:07:50<55:37:54, 227.58s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 121/1000 [8:11:38<55:37:11, 227.79s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 122/1000 [8:15:25<55:28:38, 227.47s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 123/1000 [8:19:08<55:06:44, 226.23s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▏        | 124/1000 [8:22:57<55:15:16, 227.07s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 12%|█▎        | 125/1000 [8:26:45<55:15:07, 227.32s/epoch, accuracy=0.707, loss=0.814, lr=2e-5, val_accuracy=0.713, val_loss=0.803, val_lr=2e-5] 13%|█▎        | 126/1000 [8:30:33<55:13:06, 227.44s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 127/1000 [8:34:21<55:15:08, 227.84s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 128/1000 [8:38:06<54:58:50, 226.98s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 129/1000 [8:41:49<54:35:02, 225.61s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 130/1000 [8:45:34<54:27:48, 225.37s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 131/1000 [8:49:23<54:39:37, 226.44s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 132/1000 [8:53:12<54:50:33, 227.46s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 133/1000 [8:57:02<54:56:29, 228.13s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 13%|█▎        | 134/1000 [9:00:52<55:01:00, 228.71s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 14%|█▎        | 135/1000 [9:04:39<54:47:14, 228.02s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 14%|█▎        | 136/1000 [9:08:25<54:37:07, 227.58s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 14%|█▎        | 137/1000 [9:12:14<54:40:04, 228.05s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 14%|█▍        | 138/1000 [9:16:04<54:41:35, 228.42s/epoch, accuracy=0.707, loss=0.814, lr=2e-6, val_accuracy=0.713, val_loss=0.803, val_lr=2e-6] 14%|█▍        | 139/1000 [9:19:54<54:46:29, 229.02s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 140/1000 [9:23:38<54:22:09, 227.59s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 141/1000 [9:27:25<54:15:51, 227.42s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 142/1000 [9:31:06<53:44:35, 225.50s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 143/1000 [9:34:51<53:37:02, 225.23s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 144/1000 [9:38:40<53:51:54, 226.54s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 14%|█▍        | 145/1000 [9:42:29<53:57:36, 227.20s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 15%|█▍        | 146/1000 [9:46:17<53:57:49, 227.48s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 15%|█▍        | 147/1000 [9:50:05<53:56:18, 227.64s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 15%|█▍        | 148/1000 [9:53:55<54:00:51, 228.23s/epoch, accuracy=0.707, loss=0.814, lr=2e-7, val_accuracy=0.713, val_loss=0.803, val_lr=2e-7] 15%|█▍        | 149/1000 [9:57:39<53:38:54, 226.95s/epoch, accuracy=0.707, loss=0.814, lr=2e-8, val_accuracy=0.713, val_loss=0.803, val_lr=2e-8]slurmstepd: error: *** JOB 61661164 ON eu-a2p-528 CANCELLED AT 2024-06-09T03:35:54 DUE TO TIME LIMIT ***
