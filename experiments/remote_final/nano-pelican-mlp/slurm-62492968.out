2024-06-18 11:20:41.090164: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 11:20:41.154530: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 11:20:41.407149: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-18 11:20:43.622444: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-06-18 11:20:53.022622: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 32, 4)     │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ inner_product       │ [(None, 32, 32,   │          0 │ input_layer[0][0] │
│ (InnerProduct)      │ 1), (None, 32,    │            │                   │
│                     │ 32, 1)]           │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalization │ (None, 32, 32, 1) │          4 │ inner_product[0]… │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v2 (Lineq2v2) │ (None, 32, 32, 6) │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ diag_bias_dense     │ (None, 32, 32, 8) │         64 │ lineq2v2[0][0]    │
│ (DiagBiasDense)     │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ multiply (Multiply) │ (None, 32, 32, 8) │          0 │ diag_bias_dense[… │
│                     │                   │            │ inner_product[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalizatio… │ (None, 32, 32, 8) │         32 │ multiply[0][0]    │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v0 (Lineq2v0) │ (None, 16)        │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 5)         │         85 │ lineq2v0[0][0]    │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 185 (740.00 B)
 Trainable params: 167 (668.00 B)
 Non-trainable params: 18 (72.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [04:33<75:50:29, 273.30s/epoch, accuracy=0.608, loss=1.09, lr=0.002, val_accuracy=0.654, val_loss=0.988, val_lr=0.002]  0%|          | 2/1000 [09:03<75:19:30, 271.71s/epoch, accuracy=0.65, loss=0.983, lr=0.002, val_accuracy=0.661, val_loss=0.971, val_lr=0.002]  0%|          | 3/1000 [13:35<75:13:04, 271.60s/epoch, accuracy=0.655, loss=0.966, lr=0.002, val_accuracy=0.66, val_loss=0.953, val_lr=0.002]  0%|          | 4/1000 [18:06<75:02:16, 271.22s/epoch, accuracy=0.655, loss=0.953, lr=0.002, val_accuracy=0.663, val_loss=0.941, val_lr=0.002]  0%|          | 5/1000 [22:35<74:47:26, 270.60s/epoch, accuracy=0.658, loss=0.944, lr=0.002, val_accuracy=0.666, val_loss=0.931, val_lr=0.002]  1%|          | 6/1000 [27:07<74:51:31, 271.12s/epoch, accuracy=0.662, loss=0.936, lr=0.002, val_accuracy=0.669, val_loss=0.925, val_lr=0.002]  1%|          | 7/1000 [31:39<74:50:51, 271.35s/epoch, accuracy=0.663, loss=0.932, lr=0.002, val_accuracy=0.666, val_loss=0.924, val_lr=0.002]  1%|          | 8/1000 [36:09<74:39:52, 270.96s/epoch, accuracy=0.664, loss=0.93, lr=0.002, val_accuracy=0.668, val_loss=0.922, val_lr=0.002]   1%|          | 9/1000 [40:38<74:24:21, 270.29s/epoch, accuracy=0.665, loss=0.927, lr=0.002, val_accuracy=0.668, val_loss=0.916, val_lr=0.002]  1%|          | 10/1000 [45:08<74:17:21, 270.14s/epoch, accuracy=0.665, loss=0.923, lr=0.002, val_accuracy=0.671, val_loss=0.911, val_lr=0.002]  1%|          | 11/1000 [49:37<74:10:00, 269.97s/epoch, accuracy=0.666, loss=0.919, lr=0.002, val_accuracy=0.671, val_loss=0.909, val_lr=0.002]  1%|          | 12/1000 [54:07<74:03:37, 269.86s/epoch, accuracy=0.666, loss=0.917, lr=0.002, val_accuracy=0.67, val_loss=0.909, val_lr=0.002]   1%|▏         | 13/1000 [58:38<74:03:32, 270.12s/epoch, accuracy=0.666, loss=0.916, lr=0.002, val_accuracy=0.673, val_loss=0.906, val_lr=0.002]  1%|▏         | 14/1000 [1:03:13<74:26:56, 271.82s/epoch, accuracy=0.667, loss=0.915, lr=0.002, val_accuracy=0.673, val_loss=0.904, val_lr=0.002]  2%|▏         | 15/1000 [1:07:45<74:21:27, 271.76s/epoch, accuracy=0.667, loss=0.913, lr=0.002, val_accuracy=0.668, val_loss=0.908, val_lr=0.002]  2%|▏         | 16/1000 [1:12:17<74:20:03, 271.95s/epoch, accuracy=0.667, loss=0.912, lr=0.002, val_accuracy=0.671, val_loss=0.903, val_lr=0.002]  2%|▏         | 17/1000 [1:16:50<74:18:12, 272.12s/epoch, accuracy=0.667, loss=0.912, lr=0.002, val_accuracy=0.667, val_loss=0.905, val_lr=0.002]  2%|▏         | 18/1000 [1:21:21<74:09:20, 271.85s/epoch, accuracy=0.668, loss=0.91, lr=0.002, val_accuracy=0.673, val_loss=0.9, val_lr=0.002]     2%|▏         | 19/1000 [1:26:04<74:58:57, 275.17s/epoch, accuracy=0.668, loss=0.91, lr=0.002, val_accuracy=0.669, val_loss=0.908, val_lr=0.002]  2%|▏         | 20/1000 [1:30:29<74:05:59, 272.20s/epoch, accuracy=0.669, loss=0.909, lr=0.002, val_accuracy=0.673, val_loss=0.9, val_lr=0.002]   2%|▏         | 21/1000 [1:34:54<73:25:28, 270.00s/epoch, accuracy=0.669, loss=0.908, lr=0.002, val_accuracy=0.669, val_loss=0.906, val_lr=0.002]  2%|▏         | 22/1000 [1:39:12<72:23:31, 266.47s/epoch, accuracy=0.669, loss=0.908, lr=0.002, val_accuracy=0.67, val_loss=0.912, val_lr=0.002]   2%|▏         | 23/1000 [1:43:34<71:54:57, 264.99s/epoch, accuracy=0.669, loss=0.907, lr=0.002, val_accuracy=0.674, val_loss=0.896, val_lr=0.002]  2%|▏         | 24/1000 [1:47:54<71:25:27, 263.45s/epoch, accuracy=0.669, loss=0.907, lr=0.002, val_accuracy=0.67, val_loss=0.904, val_lr=0.002]   2%|▎         | 25/1000 [1:52:14<71:05:58, 262.52s/epoch, accuracy=0.669, loss=0.906, lr=0.002, val_accuracy=0.672, val_loss=0.902, val_lr=0.002]  3%|▎         | 26/1000 [1:56:36<70:59:01, 262.36s/epoch, accuracy=0.669, loss=0.906, lr=0.002, val_accuracy=0.675, val_loss=0.896, val_lr=0.002]  3%|▎         | 27/1000 [2:01:21<72:45:29, 269.20s/epoch, accuracy=0.669, loss=0.906, lr=0.002, val_accuracy=0.671, val_loss=0.897, val_lr=0.002]  3%|▎         | 28/1000 [2:05:53<72:53:14, 269.95s/epoch, accuracy=0.669, loss=0.906, lr=0.002, val_accuracy=0.674, val_loss=0.896, val_lr=0.002]  3%|▎         | 29/1000 [2:10:10<71:48:05, 266.21s/epoch, accuracy=0.67, loss=0.905, lr=0.002, val_accuracy=0.673, val_loss=0.901, val_lr=0.002]   3%|▎         | 30/1000 [2:14:36<71:39:01, 265.92s/epoch, accuracy=0.67, loss=0.905, lr=0.002, val_accuracy=0.674, val_loss=0.896, val_lr=0.002]  3%|▎         | 31/1000 [2:18:56<71:07:43, 264.26s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.676, val_loss=0.894, val_lr=0.002]  3%|▎         | 32/1000 [2:23:41<72:42:44, 270.42s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.677, val_loss=0.892, val_lr=0.002]  3%|▎         | 33/1000 [2:28:05<72:07:38, 268.52s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.677, val_loss=0.893, val_lr=0.002]  3%|▎         | 34/1000 [2:32:50<73:22:51, 273.47s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.672, val_loss=0.898, val_lr=0.002]  4%|▎         | 35/1000 [2:37:08<72:01:16, 268.68s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.67, val_loss=0.903, val_lr=0.002]   4%|▎         | 36/1000 [2:41:25<71:01:48, 265.26s/epoch, accuracy=0.67, loss=0.904, lr=0.002, val_accuracy=0.67, val_loss=0.901, val_lr=0.002]  4%|▎         | 37/1000 [2:45:41<70:11:26, 262.40s/epoch, accuracy=0.671, loss=0.903, lr=0.002, val_accuracy=0.666, val_loss=0.914, val_lr=0.002]  4%|▍         | 38/1000 [2:49:55<69:29:02, 260.02s/epoch, accuracy=0.67, loss=0.903, lr=0.002, val_accuracy=0.673, val_loss=0.898, val_lr=0.002]   4%|▍         | 39/1000 [2:54:16<69:30:40, 260.40s/epoch, accuracy=0.671, loss=0.903, lr=0.002, val_accuracy=0.673, val_loss=0.896, val_lr=0.002]  4%|▍         | 40/1000 [2:58:33<69:10:48, 259.43s/epoch, accuracy=0.671, loss=0.902, lr=0.002, val_accuracy=0.671, val_loss=0.898, val_lr=0.002]  4%|▍         | 41/1000 [3:02:50<68:53:43, 258.63s/epoch, accuracy=0.671, loss=0.902, lr=0.002, val_accuracy=0.677, val_loss=0.891, val_lr=0.002]  4%|▍         | 42/1000 [3:07:07<68:39:53, 258.03s/epoch, accuracy=0.671, loss=0.902, lr=0.002, val_accuracy=0.676, val_loss=0.893, val_lr=0.002]  4%|▍         | 43/1000 [3:11:25<68:34:06, 257.94s/epoch, accuracy=0.671, loss=0.902, lr=0.002, val_accuracy=0.675, val_loss=0.895, val_lr=0.002]  4%|▍         | 44/1000 [3:16:02<70:04:26, 263.88s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.676, val_loss=0.89, val_lr=0.0002]  4%|▍         | 45/1000 [3:20:18<69:23:16, 261.57s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.677, val_loss=0.89, val_lr=0.0002]  5%|▍         | 46/1000 [3:24:35<68:53:50, 259.99s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.678, val_loss=0.889, val_lr=0.0002]  5%|▍         | 47/1000 [3:29:01<69:20:06, 261.92s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.678, val_loss=0.889, val_lr=0.0002]  5%|▍         | 48/1000 [3:33:22<69:12:30, 261.71s/epoch, accuracy=0.674, loss=0.898, lr=0.0002, val_accuracy=0.676, val_loss=0.889, val_lr=0.0002]  5%|▍         | 49/1000 [3:37:44<69:09:26, 261.79s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.678, val_loss=0.888, val_lr=0.0002]  5%|▌         | 50/1000 [3:42:07<69:09:19, 262.06s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.677, val_loss=0.889, val_lr=0.0002]  5%|▌         | 51/1000 [3:46:28<68:58:37, 261.66s/epoch, accuracy=0.673, loss=0.898, lr=0.0002, val_accuracy=0.678, val_loss=0.889, val_lr=0.0002]  5%|▌         | 52/1000 [3:50:50<68:58:49, 261.95s/epoch, accuracy=0.674, loss=0.898, lr=0.0002, val_accuracy=0.679, val_loss=0.888, val_lr=0.0002]  5%|▌         | 53/1000 [3:55:13<68:58:36, 262.21s/epoch, accuracy=0.674, loss=0.898, lr=0.0002, val_accuracy=0.679, val_loss=0.888, val_lr=0.0002]  5%|▌         | 54/1000 [3:59:36<68:55:18, 262.28s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.678, val_loss=0.889, val_lr=0.0002]  6%|▌         | 55/1000 [4:03:57<68:46:51, 262.02s/epoch, accuracy=0.674, loss=0.898, lr=0.0002, val_accuracy=0.678, val_loss=0.889, val_lr=0.0002]  6%|▌         | 56/1000 [4:08:20<68:47:08, 262.32s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.677, val_loss=0.889, val_lr=0.0002]  6%|▌         | 57/1000 [4:12:43<68:45:09, 262.47s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.677, val_loss=0.889, val_lr=0.0002]  6%|▌         | 58/1000 [4:17:07<68:47:30, 262.90s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.679, val_loss=0.888, val_lr=0.0002]  6%|▌         | 59/1000 [4:21:21<68:03:12, 260.35s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.678, val_loss=0.888, val_lr=0.0002]  6%|▌         | 60/1000 [4:25:38<67:42:40, 259.32s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.676, val_loss=0.889, val_lr=0.0002]  6%|▌         | 61/1000 [4:30:05<68:11:52, 261.46s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.676, val_loss=0.889, val_lr=0.0002]  6%|▌         | 62/1000 [4:34:29<68:20:45, 262.31s/epoch, accuracy=0.674, loss=0.897, lr=0.0002, val_accuracy=0.677, val_loss=0.889, val_lr=0.0002]  6%|▋         | 63/1000 [4:38:54<68:28:39, 263.09s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]      6%|▋         | 64/1000 [4:43:18<68:30:37, 263.50s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  6%|▋         | 65/1000 [4:47:41<68:21:43, 263.21s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  7%|▋         | 66/1000 [4:52:04<68:17:33, 263.23s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  7%|▋         | 67/1000 [4:56:27<68:09:35, 263.00s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.679, val_loss=0.888, val_lr=2e-5]  7%|▋         | 68/1000 [5:00:50<68:05:21, 263.01s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.679, val_loss=0.887, val_lr=2e-5]  7%|▋         | 69/1000 [5:05:22<68:43:48, 265.77s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.679, val_loss=0.888, val_lr=2e-5]  7%|▋         | 70/1000 [5:10:02<69:47:05, 270.13s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  7%|▋         | 71/1000 [5:14:30<69:33:56, 269.58s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  7%|▋         | 72/1000 [5:18:57<69:17:35, 268.81s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]  7%|▋         | 72/1000 [5:18:57<68:31:06, 265.80s/epoch, accuracy=0.674, loss=0.897, lr=2e-5, val_accuracy=0.678, val_loss=0.888, val_lr=2e-5]
