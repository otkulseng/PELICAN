2024-06-18 12:38:23.548225: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-06-18 12:38:23.550508: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 12:38:23.603724: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 12:38:24.100528: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-18 12:38:26.747335: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-06-18 12:38:35.966909: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 8, 4)      │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ inner_product       │ [(None, 8, 8, 1), │          0 │ input_layer[0][0] │
│ (InnerProduct)      │ (None, 8, 8, 1)]  │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalization │ (None, 8, 8, 1)   │          4 │ inner_product[0]… │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v2 (Lineq2v2) │ (None, 8, 8, 6)   │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ diag_bias_dense     │ (None, 8, 8, 8)   │         64 │ lineq2v2[0][0]    │
│ (DiagBiasDense)     │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ multiply (Multiply) │ (None, 8, 8, 8)   │          0 │ diag_bias_dense[… │
│                     │                   │            │ inner_product[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalizatio… │ (None, 8, 8, 8)   │         32 │ multiply[0][0]    │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v0 (Lineq2v0) │ (None, 16)        │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 5)         │         85 │ lineq2v0[0][0]    │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 185 (740.00 B)
 Trainable params: 167 (668.00 B)
 Non-trainable params: 18 (72.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [00:21<6:05:59, 21.98s/epoch, accuracy=0.394, loss=1.37, lr=0.002, val_accuracy=0.408, val_loss=1.32, val_lr=0.002]  0%|          | 2/1000 [00:41<5:45:01, 20.74s/epoch, accuracy=0.422, loss=1.31, lr=0.002, val_accuracy=0.422, val_loss=1.31, val_lr=0.002]  0%|          | 3/1000 [01:01<5:38:07, 20.35s/epoch, accuracy=0.432, loss=1.3, lr=0.002, val_accuracy=0.433, val_loss=1.3, val_lr=0.002]    0%|          | 4/1000 [01:21<5:34:53, 20.17s/epoch, accuracy=0.436, loss=1.29, lr=0.002, val_accuracy=0.434, val_loss=1.3, val_lr=0.002]  0%|          | 5/1000 [01:41<5:32:55, 20.08s/epoch, accuracy=0.44, loss=1.29, lr=0.002, val_accuracy=0.442, val_loss=1.29, val_lr=0.002]  1%|          | 6/1000 [02:01<5:31:36, 20.02s/epoch, accuracy=0.445, loss=1.28, lr=0.002, val_accuracy=0.442, val_loss=1.28, val_lr=0.002]  1%|          | 7/1000 [02:21<5:30:37, 19.98s/epoch, accuracy=0.448, loss=1.28, lr=0.002, val_accuracy=0.444, val_loss=1.29, val_lr=0.002]  1%|          | 8/1000 [02:41<5:30:11, 19.97s/epoch, accuracy=0.451, loss=1.28, lr=0.002, val_accuracy=0.45, val_loss=1.28, val_lr=0.002]   1%|          | 9/1000 [03:01<5:29:42, 19.96s/epoch, accuracy=0.453, loss=1.27, lr=0.002, val_accuracy=0.45, val_loss=1.28, val_lr=0.002]  1%|          | 10/1000 [03:21<5:29:21, 19.96s/epoch, accuracy=0.456, loss=1.27, lr=0.002, val_accuracy=0.451, val_loss=1.27, val_lr=0.002]  1%|          | 11/1000 [03:41<5:29:07, 19.97s/epoch, accuracy=0.456, loss=1.27, lr=0.002, val_accuracy=0.456, val_loss=1.27, val_lr=0.002]  1%|          | 12/1000 [04:01<5:28:49, 19.97s/epoch, accuracy=0.457, loss=1.27, lr=0.002, val_accuracy=0.457, val_loss=1.27, val_lr=0.002]  1%|▏         | 13/1000 [04:21<5:28:30, 19.97s/epoch, accuracy=0.458, loss=1.26, lr=0.002, val_accuracy=0.449, val_loss=1.27, val_lr=0.002]  1%|▏         | 14/1000 [04:41<5:28:05, 19.97s/epoch, accuracy=0.459, loss=1.26, lr=0.002, val_accuracy=0.459, val_loss=1.26, val_lr=0.002]  2%|▏         | 15/1000 [05:01<5:27:43, 19.96s/epoch, accuracy=0.459, loss=1.26, lr=0.002, val_accuracy=0.457, val_loss=1.26, val_lr=0.002]  2%|▏         | 16/1000 [05:20<5:27:16, 19.96s/epoch, accuracy=0.46, loss=1.26, lr=0.002, val_accuracy=0.442, val_loss=1.27, val_lr=0.002]   2%|▏         | 17/1000 [05:40<5:26:36, 19.94s/epoch, accuracy=0.46, loss=1.26, lr=0.002, val_accuracy=0.442, val_loss=1.27, val_lr=0.002]  2%|▏         | 18/1000 [06:00<5:26:04, 19.92s/epoch, accuracy=0.461, loss=1.26, lr=0.002, val_accuracy=0.454, val_loss=1.27, val_lr=0.002]  2%|▏         | 19/1000 [06:20<5:25:41, 19.92s/epoch, accuracy=0.461, loss=1.26, lr=0.002, val_accuracy=0.451, val_loss=1.26, val_lr=0.002]  2%|▏         | 20/1000 [06:40<5:25:18, 19.92s/epoch, accuracy=0.461, loss=1.26, lr=0.002, val_accuracy=0.454, val_loss=1.26, val_lr=0.002]  2%|▏         | 21/1000 [07:00<5:24:58, 19.92s/epoch, accuracy=0.461, loss=1.26, lr=0.002, val_accuracy=0.455, val_loss=1.26, val_lr=0.002]  2%|▏         | 22/1000 [07:20<5:24:41, 19.92s/epoch, accuracy=0.462, loss=1.26, lr=0.002, val_accuracy=0.451, val_loss=1.26, val_lr=0.002]  2%|▏         | 23/1000 [07:40<5:24:21, 19.92s/epoch, accuracy=0.462, loss=1.26, lr=0.002, val_accuracy=0.443, val_loss=1.26, val_lr=0.002]  2%|▏         | 24/1000 [08:00<5:24:04, 19.92s/epoch, accuracy=0.462, loss=1.26, lr=0.002, val_accuracy=0.46, val_loss=1.26, val_lr=0.002]   2%|▎         | 25/1000 [08:20<5:23:55, 19.93s/epoch, accuracy=0.463, loss=1.26, lr=0.002, val_accuracy=0.461, val_loss=1.26, val_lr=0.002]  3%|▎         | 26/1000 [08:40<5:23:41, 19.94s/epoch, accuracy=0.463, loss=1.26, lr=0.002, val_accuracy=0.457, val_loss=1.26, val_lr=0.002]  3%|▎         | 27/1000 [09:00<5:23:19, 19.94s/epoch, accuracy=0.463, loss=1.26, lr=0.002, val_accuracy=0.462, val_loss=1.26, val_lr=0.002]  3%|▎         | 28/1000 [09:20<5:23:08, 19.95s/epoch, accuracy=0.463, loss=1.26, lr=0.002, val_accuracy=0.452, val_loss=1.26, val_lr=0.002]  3%|▎         | 29/1000 [09:40<5:22:37, 19.94s/epoch, accuracy=0.464, loss=1.26, lr=0.002, val_accuracy=0.461, val_loss=1.26, val_lr=0.002]  3%|▎         | 30/1000 [09:59<5:22:14, 19.93s/epoch, accuracy=0.464, loss=1.26, lr=0.002, val_accuracy=0.458, val_loss=1.27, val_lr=0.002]  3%|▎         | 31/1000 [10:19<5:21:49, 19.93s/epoch, accuracy=0.464, loss=1.26, lr=0.002, val_accuracy=0.464, val_loss=1.26, val_lr=0.002]  3%|▎         | 32/1000 [10:39<5:21:34, 19.93s/epoch, accuracy=0.464, loss=1.26, lr=0.002, val_accuracy=0.457, val_loss=1.26, val_lr=0.002]  3%|▎         | 33/1000 [10:59<5:21:12, 19.93s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.463, val_loss=1.26, val_lr=0.002]  3%|▎         | 34/1000 [11:19<5:20:49, 19.93s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.465, val_loss=1.26, val_lr=0.002]  4%|▎         | 35/1000 [11:39<5:20:43, 19.94s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.462, val_loss=1.26, val_lr=0.002]  4%|▎         | 36/1000 [11:59<5:20:05, 19.92s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.459, val_loss=1.26, val_lr=0.002]  4%|▎         | 37/1000 [12:19<5:19:44, 19.92s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.444, val_loss=1.26, val_lr=0.002]  4%|▍         | 38/1000 [12:39<5:19:13, 19.91s/epoch, accuracy=0.466, loss=1.26, lr=0.002, val_accuracy=0.445, val_loss=1.26, val_lr=0.002]  4%|▍         | 39/1000 [12:59<5:19:09, 19.93s/epoch, accuracy=0.465, loss=1.26, lr=0.002, val_accuracy=0.462, val_loss=1.26, val_lr=0.002]  4%|▍         | 40/1000 [13:19<5:18:52, 19.93s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.461, val_loss=1.26, val_lr=0.002]  4%|▍         | 41/1000 [13:39<5:18:29, 19.93s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.464, val_loss=1.26, val_lr=0.002]  4%|▍         | 42/1000 [13:59<5:18:29, 19.95s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.468, val_loss=1.26, val_lr=0.002]  4%|▍         | 43/1000 [14:19<5:18:14, 19.95s/epoch, accuracy=0.465, loss=1.25, lr=0.002, val_accuracy=0.459, val_loss=1.26, val_lr=0.002]  4%|▍         | 44/1000 [14:38<5:17:38, 19.94s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.461, val_loss=1.26, val_lr=0.002]  4%|▍         | 45/1000 [14:58<5:17:16, 19.93s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.463, val_loss=1.26, val_lr=0.002]  5%|▍         | 46/1000 [15:18<5:16:32, 19.91s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.459, val_loss=1.25, val_lr=0.002]  5%|▍         | 47/1000 [15:38<5:16:11, 19.91s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.462, val_loss=1.26, val_lr=0.002]  5%|▍         | 48/1000 [15:58<5:15:27, 19.88s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.462, val_loss=1.26, val_lr=0.002]  5%|▍         | 49/1000 [16:18<5:15:09, 19.88s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.451, val_loss=1.26, val_lr=0.002]  5%|▌         | 50/1000 [16:38<5:14:41, 19.88s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.454, val_loss=1.25, val_lr=0.002]  5%|▌         | 51/1000 [16:58<5:14:24, 19.88s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.462, val_loss=1.25, val_lr=0.002]  5%|▌         | 52/1000 [17:17<5:13:54, 19.87s/epoch, accuracy=0.466, loss=1.25, lr=0.002, val_accuracy=0.461, val_loss=1.26, val_lr=0.002]  5%|▌         | 53/1000 [17:37<5:13:34, 19.87s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.466, val_loss=1.25, val_lr=0.0002]  5%|▌         | 54/1000 [17:57<5:13:19, 19.87s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.466, val_loss=1.25, val_lr=0.0002]  6%|▌         | 55/1000 [18:17<5:12:55, 19.87s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]  6%|▌         | 56/1000 [18:37<5:12:35, 19.87s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]  6%|▌         | 57/1000 [18:57<5:11:59, 19.85s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.466, val_loss=1.25, val_lr=0.0002]  6%|▌         | 58/1000 [19:17<5:11:40, 19.85s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.466, val_loss=1.25, val_lr=0.0002]  6%|▌         | 59/1000 [19:36<5:11:24, 19.86s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.463, val_loss=1.25, val_lr=0.0002]  6%|▌         | 60/1000 [19:56<5:11:07, 19.86s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]  6%|▌         | 61/1000 [20:16<5:10:35, 19.85s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]  6%|▌         | 62/1000 [20:36<5:10:23, 19.85s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]  6%|▌         | 62/1000 [20:36<5:11:47, 19.94s/epoch, accuracy=0.467, loss=1.25, lr=0.0002, val_accuracy=0.465, val_loss=1.25, val_lr=0.0002]
