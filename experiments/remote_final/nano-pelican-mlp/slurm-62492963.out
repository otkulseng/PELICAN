2024-06-18 11:20:14.431598: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 11:20:14.486360: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 11:20:14.736767: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-18 11:20:17.028219: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-06-18 11:20:27.077855: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 32, 4)     │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ inner_product       │ [(None, 32, 32,   │          0 │ input_layer[0][0] │
│ (InnerProduct)      │ 1), (None, 32,    │            │                   │
│                     │ 32, 1)]           │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalization │ (None, 32, 32, 1) │          4 │ inner_product[0]… │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v2 (Lineq2v2) │ (None, 32, 32, 6) │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ diag_bias_dense     │ (None, 32, 32, 8) │         64 │ lineq2v2[0][0]    │
│ (DiagBiasDense)     │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ multiply (Multiply) │ (None, 32, 32, 8) │          0 │ diag_bias_dense[… │
│                     │                   │            │ inner_product[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalizatio… │ (None, 32, 32, 8) │         32 │ multiply[0][0]    │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v0 (Lineq2v0) │ (None, 16)        │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 5)         │         85 │ lineq2v0[0][0]    │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 185 (740.00 B)
 Trainable params: 167 (668.00 B)
 Non-trainable params: 18 (72.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [05:51<97:35:44, 351.70s/epoch, accuracy=0.601, loss=1.1, lr=0.002, val_accuracy=0.657, val_loss=0.988, val_lr=0.002]  0%|          | 2/1000 [11:37<96:35:30, 348.43s/epoch, accuracy=0.653, loss=0.976, lr=0.002, val_accuracy=0.663, val_loss=0.964, val_lr=0.002]  0%|          | 3/1000 [17:22<96:03:43, 346.86s/epoch, accuracy=0.655, loss=0.965, lr=0.002, val_accuracy=0.66, val_loss=0.964, val_lr=0.002]   0%|          | 4/1000 [23:07<95:40:28, 345.81s/epoch, accuracy=0.657, loss=0.949, lr=0.002, val_accuracy=0.662, val_loss=0.933, val_lr=0.002]  0%|          | 5/1000 [28:47<95:04:44, 344.00s/epoch, accuracy=0.658, loss=0.937, lr=0.002, val_accuracy=0.662, val_loss=0.93, val_lr=0.002]   1%|          | 6/1000 [34:29<94:44:49, 343.15s/epoch, accuracy=0.658, loss=0.934, lr=0.002, val_accuracy=0.665, val_loss=0.922, val_lr=0.002]  1%|          | 7/1000 [40:04<93:57:03, 340.61s/epoch, accuracy=0.659, loss=0.932, lr=0.002, val_accuracy=0.659, val_loss=0.929, val_lr=0.002]  1%|          | 8/1000 [45:37<93:08:35, 338.02s/epoch, accuracy=0.659, loss=0.931, lr=0.002, val_accuracy=0.664, val_loss=0.921, val_lr=0.002]  1%|          | 9/1000 [51:08<92:28:13, 335.92s/epoch, accuracy=0.659, loss=0.928, lr=0.002, val_accuracy=0.66, val_loss=0.926, val_lr=0.002]   1%|          | 10/1000 [56:39<91:55:45, 334.29s/epoch, accuracy=0.66, loss=0.926, lr=0.002, val_accuracy=0.664, val_loss=0.918, val_lr=0.002]  1%|          | 11/1000 [1:02:12<91:47:13, 334.11s/epoch, accuracy=0.66, loss=0.924, lr=0.002, val_accuracy=0.663, val_loss=0.915, val_lr=0.002]  1%|          | 12/1000 [1:07:43<91:23:21, 333.00s/epoch, accuracy=0.66, loss=0.922, lr=0.002, val_accuracy=0.666, val_loss=0.914, val_lr=0.002]  1%|▏         | 13/1000 [1:13:13<91:05:09, 332.23s/epoch, accuracy=0.661, loss=0.92, lr=0.002, val_accuracy=0.665, val_loss=0.911, val_lr=0.002]  1%|▏         | 14/1000 [1:18:43<90:49:43, 331.63s/epoch, accuracy=0.661, loss=0.919, lr=0.002, val_accuracy=0.66, val_loss=0.917, val_lr=0.002]  2%|▏         | 15/1000 [1:24:14<90:36:30, 331.16s/epoch, accuracy=0.661, loss=0.918, lr=0.002, val_accuracy=0.665, val_loss=0.907, val_lr=0.002]  2%|▏         | 16/1000 [1:29:44<90:29:17, 331.05s/epoch, accuracy=0.661, loss=0.917, lr=0.002, val_accuracy=0.665, val_loss=0.91, val_lr=0.002]   2%|▏         | 17/1000 [1:35:16<90:24:35, 331.10s/epoch, accuracy=0.661, loss=0.915, lr=0.002, val_accuracy=0.667, val_loss=0.904, val_lr=0.002]  2%|▏         | 18/1000 [1:40:45<90:12:50, 330.72s/epoch, accuracy=0.661, loss=0.914, lr=0.002, val_accuracy=0.668, val_loss=0.903, val_lr=0.002]  2%|▏         | 19/1000 [1:46:15<90:00:10, 330.29s/epoch, accuracy=0.661, loss=0.913, lr=0.002, val_accuracy=0.667, val_loss=0.903, val_lr=0.002]  2%|▏         | 20/1000 [1:51:43<89:45:50, 329.75s/epoch, accuracy=0.662, loss=0.911, lr=0.002, val_accuracy=0.667, val_loss=0.902, val_lr=0.002]  2%|▏         | 21/1000 [1:57:12<89:36:01, 329.48s/epoch, accuracy=0.663, loss=0.91, lr=0.002, val_accuracy=0.668, val_loss=0.898, val_lr=0.002]   2%|▏         | 22/1000 [2:02:42<89:31:06, 329.52s/epoch, accuracy=0.664, loss=0.908, lr=0.002, val_accuracy=0.669, val_loss=0.898, val_lr=0.002]  2%|▏         | 23/1000 [2:08:11<89:23:54, 329.41s/epoch, accuracy=0.664, loss=0.908, lr=0.002, val_accuracy=0.669, val_loss=0.896, val_lr=0.002]  2%|▏         | 24/1000 [2:13:39<89:14:54, 329.20s/epoch, accuracy=0.665, loss=0.906, lr=0.002, val_accuracy=0.673, val_loss=0.895, val_lr=0.002]  2%|▎         | 25/1000 [2:19:06<88:54:57, 328.30s/epoch, accuracy=0.666, loss=0.905, lr=0.002, val_accuracy=0.672, val_loss=0.892, val_lr=0.002]  3%|▎         | 26/1000 [2:24:33<88:42:57, 327.90s/epoch, accuracy=0.666, loss=0.904, lr=0.002, val_accuracy=0.669, val_loss=0.898, val_lr=0.002]  3%|▎         | 27/1000 [2:30:00<88:35:11, 327.76s/epoch, accuracy=0.666, loss=0.904, lr=0.002, val_accuracy=0.671, val_loss=0.895, val_lr=0.002]  3%|▎         | 28/1000 [2:35:30<88:38:34, 328.31s/epoch, accuracy=0.667, loss=0.903, lr=0.002, val_accuracy=0.665, val_loss=0.9, val_lr=0.002]    3%|▎         | 29/1000 [2:40:59<88:36:05, 328.49s/epoch, accuracy=0.667, loss=0.902, lr=0.002, val_accuracy=0.674, val_loss=0.891, val_lr=0.002]  3%|▎         | 30/1000 [2:46:27<88:31:42, 328.56s/epoch, accuracy=0.667, loss=0.902, lr=0.002, val_accuracy=0.667, val_loss=0.896, val_lr=0.002]  3%|▎         | 31/1000 [2:51:56<88:29:07, 328.74s/epoch, accuracy=0.668, loss=0.901, lr=0.002, val_accuracy=0.673, val_loss=0.889, val_lr=0.002]  3%|▎         | 32/1000 [2:57:26<88:28:20, 329.03s/epoch, accuracy=0.668, loss=0.901, lr=0.002, val_accuracy=0.667, val_loss=0.895, val_lr=0.002]  3%|▎         | 33/1000 [3:02:55<88:22:24, 329.00s/epoch, accuracy=0.668, loss=0.9, lr=0.002, val_accuracy=0.67, val_loss=0.895, val_lr=0.002]     3%|▎         | 34/1000 [3:08:25<88:19:19, 329.15s/epoch, accuracy=0.668, loss=0.9, lr=0.002, val_accuracy=0.672, val_loss=0.89, val_lr=0.002]  4%|▎         | 35/1000 [3:13:52<88:04:17, 328.56s/epoch, accuracy=0.668, loss=0.899, lr=0.002, val_accuracy=0.675, val_loss=0.889, val_lr=0.002]  4%|▎         | 36/1000 [3:19:21<87:59:53, 328.62s/epoch, accuracy=0.669, loss=0.899, lr=0.002, val_accuracy=0.669, val_loss=0.894, val_lr=0.002]  4%|▎         | 37/1000 [3:24:51<88:04:24, 329.25s/epoch, accuracy=0.669, loss=0.899, lr=0.002, val_accuracy=0.671, val_loss=0.896, val_lr=0.002]  4%|▍         | 38/1000 [3:30:23<88:12:45, 330.11s/epoch, accuracy=0.669, loss=0.898, lr=0.002, val_accuracy=0.672, val_loss=0.889, val_lr=0.002]  4%|▍         | 39/1000 [3:35:53<88:04:19, 329.93s/epoch, accuracy=0.669, loss=0.898, lr=0.002, val_accuracy=0.671, val_loss=0.893, val_lr=0.002]  4%|▍         | 40/1000 [3:41:21<87:51:36, 329.48s/epoch, accuracy=0.669, loss=0.898, lr=0.002, val_accuracy=0.665, val_loss=0.904, val_lr=0.002]  4%|▍         | 41/1000 [3:46:53<87:55:55, 330.09s/epoch, accuracy=0.67, loss=0.898, lr=0.002, val_accuracy=0.675, val_loss=0.887, val_lr=0.002]   4%|▍         | 42/1000 [3:52:22<87:45:39, 329.79s/epoch, accuracy=0.67, loss=0.897, lr=0.002, val_accuracy=0.672, val_loss=0.888, val_lr=0.002]  4%|▍         | 43/1000 [3:57:48<87:24:27, 328.81s/epoch, accuracy=0.67, loss=0.898, lr=0.002, val_accuracy=0.675, val_loss=0.886, val_lr=0.002]  4%|▍         | 44/1000 [4:03:18<87:24:55, 329.18s/epoch, accuracy=0.67, loss=0.897, lr=0.002, val_accuracy=0.67, val_loss=0.889, val_lr=0.002]   4%|▍         | 45/1000 [4:08:45<87:06:33, 328.37s/epoch, accuracy=0.67, loss=0.897, lr=0.002, val_accuracy=0.676, val_loss=0.886, val_lr=0.002]  5%|▍         | 46/1000 [4:14:13<86:57:34, 328.15s/epoch, accuracy=0.67, loss=0.896, lr=0.002, val_accuracy=0.676, val_loss=0.887, val_lr=0.002]  5%|▍         | 47/1000 [4:19:41<86:54:19, 328.29s/epoch, accuracy=0.67, loss=0.896, lr=0.002, val_accuracy=0.676, val_loss=0.887, val_lr=0.002]  5%|▍         | 48/1000 [4:25:08<86:43:48, 327.97s/epoch, accuracy=0.671, loss=0.896, lr=0.002, val_accuracy=0.676, val_loss=0.889, val_lr=0.002]  5%|▍         | 49/1000 [4:30:36<86:35:40, 327.80s/epoch, accuracy=0.671, loss=0.896, lr=0.002, val_accuracy=0.673, val_loss=0.887, val_lr=0.002]  5%|▌         | 50/1000 [4:36:03<86:25:01, 327.47s/epoch, accuracy=0.67, loss=0.895, lr=0.002, val_accuracy=0.676, val_loss=0.884, val_lr=0.002]   5%|▌         | 51/1000 [4:41:31<86:22:01, 327.63s/epoch, accuracy=0.671, loss=0.895, lr=0.002, val_accuracy=0.672, val_loss=0.895, val_lr=0.002]  5%|▌         | 52/1000 [4:46:59<86:20:23, 327.87s/epoch, accuracy=0.671, loss=0.895, lr=0.002, val_accuracy=0.677, val_loss=0.883, val_lr=0.002]  5%|▌         | 53/1000 [4:52:28<86:19:42, 328.18s/epoch, accuracy=0.671, loss=0.895, lr=0.002, val_accuracy=0.678, val_loss=0.883, val_lr=0.002]  5%|▌         | 54/1000 [4:57:56<86:15:16, 328.24s/epoch, accuracy=0.671, loss=0.895, lr=0.002, val_accuracy=0.673, val_loss=0.889, val_lr=0.002]  6%|▌         | 55/1000 [5:03:27<86:20:44, 328.94s/epoch, accuracy=0.671, loss=0.894, lr=0.002, val_accuracy=0.678, val_loss=0.884, val_lr=0.002]  6%|▌         | 56/1000 [5:08:54<86:06:48, 328.40s/epoch, accuracy=0.672, loss=0.894, lr=0.002, val_accuracy=0.678, val_loss=0.884, val_lr=0.002]  6%|▌         | 57/1000 [5:14:24<86:10:28, 328.98s/epoch, accuracy=0.672, loss=0.894, lr=0.002, val_accuracy=0.675, val_loss=0.889, val_lr=0.002]  6%|▌         | 58/1000 [5:20:02<86:45:11, 331.54s/epoch, accuracy=0.671, loss=0.894, lr=0.002, val_accuracy=0.678, val_loss=0.883, val_lr=0.002]  6%|▌         | 59/1000 [5:25:36<86:51:08, 332.27s/epoch, accuracy=0.672, loss=0.894, lr=0.002, val_accuracy=0.673, val_loss=0.886, val_lr=0.002]  6%|▌         | 60/1000 [5:31:05<86:33:01, 331.47s/epoch, accuracy=0.672, loss=0.894, lr=0.002, val_accuracy=0.675, val_loss=0.883, val_lr=0.002]  6%|▌         | 61/1000 [5:36:37<86:29:06, 331.57s/epoch, accuracy=0.671, loss=0.893, lr=0.002, val_accuracy=0.677, val_loss=0.884, val_lr=0.002]  6%|▌         | 62/1000 [5:42:08<86:18:53, 331.27s/epoch, accuracy=0.672, loss=0.893, lr=0.002, val_accuracy=0.677, val_loss=0.883, val_lr=0.002]  6%|▋         | 63/1000 [5:47:37<86:03:44, 330.66s/epoch, accuracy=0.672, loss=0.894, lr=0.002, val_accuracy=0.678, val_loss=0.883, val_lr=0.002]  6%|▋         | 64/1000 [5:53:08<85:59:39, 330.75s/epoch, accuracy=0.672, loss=0.893, lr=0.002, val_accuracy=0.676, val_loss=0.885, val_lr=0.002]  6%|▋         | 65/1000 [5:58:39<85:55:44, 330.85s/epoch, accuracy=0.672, loss=0.893, lr=0.002, val_accuracy=0.676, val_loss=0.889, val_lr=0.002]  7%|▋         | 66/1000 [6:04:09<85:46:21, 330.60s/epoch, accuracy=0.672, loss=0.893, lr=0.002, val_accuracy=0.68, val_loss=0.881, val_lr=0.002]   7%|▋         | 67/1000 [6:09:39<85:37:03, 330.36s/epoch, accuracy=0.672, loss=0.892, lr=0.002, val_accuracy=0.675, val_loss=0.887, val_lr=0.002]  7%|▋         | 68/1000 [6:15:09<85:28:21, 330.15s/epoch, accuracy=0.672, loss=0.893, lr=0.002, val_accuracy=0.678, val_loss=0.882, val_lr=0.002]  7%|▋         | 69/1000 [6:20:39<85:23:52, 330.22s/epoch, accuracy=0.672, loss=0.892, lr=0.002, val_accuracy=0.678, val_loss=0.883, val_lr=0.002]  7%|▋         | 70/1000 [6:26:09<85:16:44, 330.11s/epoch, accuracy=0.672, loss=0.892, lr=0.002, val_accuracy=0.676, val_loss=0.887, val_lr=0.002]  7%|▋         | 71/1000 [6:31:41<85:21:10, 330.75s/epoch, accuracy=0.673, loss=0.892, lr=0.002, val_accuracy=0.677, val_loss=0.882, val_lr=0.002]  7%|▋         | 72/1000 [6:37:11<85:10:37, 330.43s/epoch, accuracy=0.673, loss=0.892, lr=0.002, val_accuracy=0.68, val_loss=0.882, val_lr=0.002]   7%|▋         | 73/1000 [6:42:39<84:56:42, 329.88s/epoch, accuracy=0.673, loss=0.891, lr=0.002, val_accuracy=0.678, val_loss=0.88, val_lr=0.002]  7%|▋         | 74/1000 [6:48:09<84:49:50, 329.80s/epoch, accuracy=0.673, loss=0.891, lr=0.002, val_accuracy=0.68, val_loss=0.879, val_lr=0.002]  8%|▊         | 75/1000 [6:53:38<84:40:18, 329.53s/epoch, accuracy=0.673, loss=0.891, lr=0.002, val_accuracy=0.676, val_loss=0.882, val_lr=0.002]  8%|▊         | 76/1000 [6:59:07<84:32:10, 329.36s/epoch, accuracy=0.673, loss=0.891, lr=0.002, val_accuracy=0.676, val_loss=0.886, val_lr=0.002]  8%|▊         | 77/1000 [7:04:39<84:38:37, 330.14s/epoch, accuracy=0.673, loss=0.89, lr=0.002, val_accuracy=0.677, val_loss=0.882, val_lr=0.002]   8%|▊         | 78/1000 [7:10:09<84:34:15, 330.21s/epoch, accuracy=0.674, loss=0.89, lr=0.002, val_accuracy=0.678, val_loss=0.882, val_lr=0.002]  8%|▊         | 79/1000 [7:15:41<84:35:52, 330.68s/epoch, accuracy=0.673, loss=0.89, lr=0.002, val_accuracy=0.677, val_loss=0.88, val_lr=0.002]   8%|▊         | 80/1000 [7:21:10<84:23:01, 330.20s/epoch, accuracy=0.674, loss=0.89, lr=0.002, val_accuracy=0.661, val_loss=0.903, val_lr=0.002]  8%|▊         | 81/1000 [7:26:41<84:22:41, 330.53s/epoch, accuracy=0.674, loss=0.89, lr=0.002, val_accuracy=0.675, val_loss=0.883, val_lr=0.002]  8%|▊         | 82/1000 [7:32:10<84:08:04, 329.94s/epoch, accuracy=0.674, loss=0.89, lr=0.002, val_accuracy=0.676, val_loss=0.882, val_lr=0.002]  8%|▊         | 83/1000 [7:37:41<84:06:26, 330.19s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]  8%|▊         | 84/1000 [7:43:12<84:04:33, 330.43s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.681, val_loss=0.876, val_lr=0.0002]  8%|▊         | 85/1000 [7:48:41<83:53:32, 330.07s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.679, val_loss=0.877, val_lr=0.0002]  9%|▊         | 86/1000 [7:54:11<83:47:22, 330.02s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.678, val_loss=0.877, val_lr=0.0002]  9%|▊         | 87/1000 [7:59:39<83:35:22, 329.60s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.877, val_lr=0.0002]   9%|▉         | 88/1000 [8:05:10<83:35:44, 329.98s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]  9%|▉         | 89/1000 [8:10:38<83:22:16, 329.46s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.679, val_loss=0.877, val_lr=0.0002]  9%|▉         | 90/1000 [8:16:08<83:16:47, 329.46s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]   9%|▉         | 91/1000 [8:21:38<83:12:16, 329.52s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]  9%|▉         | 92/1000 [8:27:08<83:09:31, 329.70s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.679, val_loss=0.877, val_lr=0.0002]  9%|▉         | 93/1000 [8:32:35<82:53:18, 329.00s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.681, val_loss=0.876, val_lr=0.0002]  9%|▉         | 94/1000 [8:38:06<82:55:24, 329.50s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.678, val_loss=0.877, val_lr=0.0002] 10%|▉         | 95/1000 [8:43:36<82:53:22, 329.73s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]  10%|▉         | 96/1000 [8:49:10<83:09:13, 331.14s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.681, val_loss=0.877, val_lr=0.0002] 10%|▉         | 97/1000 [8:55:12<85:19:10, 340.15s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002]  10%|▉         | 98/1000 [9:01:12<86:44:59, 346.23s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002] 10%|▉         | 99/1000 [9:07:13<87:45:00, 350.61s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.678, val_loss=0.878, val_lr=0.0002] 10%|█         | 100/1000 [9:13:14<88:27:18, 353.82s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002] 10%|█         | 101/1000 [9:19:14<88:49:19, 355.68s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.678, val_loss=0.876, val_lr=0.0002] 10%|█         | 102/1000 [9:25:14<89:02:13, 356.94s/epoch, accuracy=0.676, loss=0.886, lr=0.0002, val_accuracy=0.68, val_loss=0.877, val_lr=0.0002]  10%|█         | 103/1000 [9:31:14<89:07:45, 357.71s/epoch, accuracy=0.676, loss=0.885, lr=0.0002, val_accuracy=0.68, val_loss=0.876, val_lr=0.0002] 10%|█         | 104/1000 [9:37:16<89:21:14, 359.01s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5]     10%|█         | 105/1000 [9:43:17<89:25:34, 359.70s/epoch, accuracy=0.677, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█         | 106/1000 [9:49:20<89:32:22, 360.56s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.679, val_loss=0.876, val_lr=2e-5] 11%|█         | 107/1000 [9:55:19<89:22:55, 360.33s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5]  11%|█         | 108/1000 [10:01:21<89:23:15, 360.76s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█         | 109/1000 [10:07:22<89:17:59, 360.81s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█         | 110/1000 [10:13:22<89:09:13, 360.62s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█         | 111/1000 [10:19:22<89:01:24, 360.50s/epoch, accuracy=0.677, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█         | 112/1000 [10:25:22<88:51:25, 360.23s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█▏        | 113/1000 [10:31:22<88:44:08, 360.15s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5] 11%|█▏        | 113/1000 [10:31:22<82:36:00, 335.24s/epoch, accuracy=0.676, loss=0.885, lr=2e-5, val_accuracy=0.68, val_loss=0.876, val_lr=2e-5]
