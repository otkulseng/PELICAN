2024-06-18 12:59:33.662748: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-06-18 12:59:33.663053: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 12:59:33.666275: I external/local_tsl/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.
2024-06-18 12:59:33.701691: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-18 12:59:35.381466: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-06-18 12:59:44.733929: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:282] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
Running train
Model: "functional_1"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input_layer         │ (None, 8, 4)      │          0 │ -                 │
│ (InputLayer)        │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ inner_product       │ [(None, 8, 8, 1), │          0 │ input_layer[0][0] │
│ (InnerProduct)      │ (None, 8, 8, 1)]  │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalization │ (None, 8, 8, 1)   │          4 │ inner_product[0]… │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v2 (Lineq2v2) │ (None, 8, 8, 6)   │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ diag_bias_dense     │ (None, 8, 8, 2)   │         16 │ lineq2v2[0][0]    │
│ (DiagBiasDense)     │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ multiply (Multiply) │ (None, 8, 8, 2)   │          0 │ diag_bias_dense[… │
│                     │                   │            │ inner_product[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ batch_normalizatio… │ (None, 8, 8, 2)   │          8 │ multiply[0][0]    │
│ (BatchNormalizatio… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ lineq2v0 (Lineq2v0) │ (None, 4)         │          0 │ batch_normalizat… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense (Dense)       │ (None, 5)         │         25 │ lineq2v0[0][0]    │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 53 (212.00 B)
 Trainable params: 47 (188.00 B)
 Non-trainable params: 6 (24.00 B)
0epoch [00:00, ?epoch/s]  0%|          | 0/1000 [00:00<?, ?epoch/s]/cluster/home/okulseng/.local/lib64/python3.11/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:120: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
  0%|          | 1/1000 [00:19<5:26:23, 19.60s/epoch, accuracy=0.379, loss=1.41, lr=0.002, val_accuracy=0.404, val_loss=1.35, val_lr=0.002]  0%|          | 2/1000 [00:37<5:05:19, 18.36s/epoch, accuracy=0.404, loss=1.34, lr=0.002, val_accuracy=0.407, val_loss=1.34, val_lr=0.002]  0%|          | 3/1000 [00:54<4:54:55, 17.75s/epoch, accuracy=0.41, loss=1.33, lr=0.002, val_accuracy=0.405, val_loss=1.33, val_lr=0.002]   0%|          | 4/1000 [01:11<4:52:01, 17.59s/epoch, accuracy=0.414, loss=1.32, lr=0.002, val_accuracy=0.408, val_loss=1.32, val_lr=0.002]  0%|          | 5/1000 [01:28<4:50:17, 17.50s/epoch, accuracy=0.416, loss=1.32, lr=0.002, val_accuracy=0.416, val_loss=1.32, val_lr=0.002]  1%|          | 6/1000 [01:46<4:49:21, 17.47s/epoch, accuracy=0.417, loss=1.32, lr=0.002, val_accuracy=0.415, val_loss=1.32, val_lr=0.002]  1%|          | 7/1000 [02:03<4:48:42, 17.44s/epoch, accuracy=0.418, loss=1.32, lr=0.002, val_accuracy=0.415, val_loss=1.32, val_lr=0.002]  1%|          | 8/1000 [02:20<4:47:53, 17.41s/epoch, accuracy=0.419, loss=1.31, lr=0.002, val_accuracy=0.415, val_loss=1.33, val_lr=0.002]  1%|          | 9/1000 [02:38<4:47:20, 17.40s/epoch, accuracy=0.421, loss=1.31, lr=0.002, val_accuracy=0.418, val_loss=1.31, val_lr=0.002]  1%|          | 10/1000 [02:55<4:45:29, 17.30s/epoch, accuracy=0.423, loss=1.31, lr=0.002, val_accuracy=0.418, val_loss=1.31, val_lr=0.002]  1%|          | 11/1000 [03:12<4:45:28, 17.32s/epoch, accuracy=0.426, loss=1.31, lr=0.002, val_accuracy=0.425, val_loss=1.31, val_lr=0.002]  1%|          | 12/1000 [03:30<4:45:43, 17.35s/epoch, accuracy=0.428, loss=1.3, lr=0.002, val_accuracy=0.425, val_loss=1.3, val_lr=0.002]    1%|▏         | 13/1000 [03:47<4:45:42, 17.37s/epoch, accuracy=0.43, loss=1.3, lr=0.002, val_accuracy=0.429, val_loss=1.31, val_lr=0.002]  1%|▏         | 14/1000 [04:04<4:44:44, 17.33s/epoch, accuracy=0.432, loss=1.3, lr=0.002, val_accuracy=0.425, val_loss=1.31, val_lr=0.002]  2%|▏         | 15/1000 [04:22<4:44:31, 17.33s/epoch, accuracy=0.433, loss=1.3, lr=0.002, val_accuracy=0.432, val_loss=1.3, val_lr=0.002]   2%|▏         | 16/1000 [04:39<4:44:33, 17.35s/epoch, accuracy=0.434, loss=1.3, lr=0.002, val_accuracy=0.431, val_loss=1.3, val_lr=0.002]  2%|▏         | 17/1000 [04:56<4:43:05, 17.28s/epoch, accuracy=0.436, loss=1.29, lr=0.002, val_accuracy=0.432, val_loss=1.29, val_lr=0.002]  2%|▏         | 18/1000 [05:13<4:42:35, 17.27s/epoch, accuracy=0.436, loss=1.29, lr=0.002, val_accuracy=0.436, val_loss=1.3, val_lr=0.002]   2%|▏         | 19/1000 [05:31<4:42:14, 17.26s/epoch, accuracy=0.437, loss=1.29, lr=0.002, val_accuracy=0.437, val_loss=1.29, val_lr=0.002]  2%|▏         | 20/1000 [05:48<4:42:43, 17.31s/epoch, accuracy=0.438, loss=1.29, lr=0.002, val_accuracy=0.437, val_loss=1.29, val_lr=0.002]  2%|▏         | 21/1000 [06:06<4:43:02, 17.35s/epoch, accuracy=0.439, loss=1.29, lr=0.002, val_accuracy=0.433, val_loss=1.29, val_lr=0.002]  2%|▏         | 22/1000 [06:23<4:42:58, 17.36s/epoch, accuracy=0.44, loss=1.29, lr=0.002, val_accuracy=0.44, val_loss=1.29, val_lr=0.002]    2%|▏         | 23/1000 [06:40<4:41:06, 17.26s/epoch, accuracy=0.441, loss=1.29, lr=0.002, val_accuracy=0.442, val_loss=1.29, val_lr=0.002]  2%|▏         | 24/1000 [06:57<4:41:15, 17.29s/epoch, accuracy=0.442, loss=1.29, lr=0.002, val_accuracy=0.435, val_loss=1.29, val_lr=0.002]  2%|▎         | 25/1000 [07:15<4:42:04, 17.36s/epoch, accuracy=0.443, loss=1.29, lr=0.002, val_accuracy=0.431, val_loss=1.29, val_lr=0.002]  3%|▎         | 26/1000 [07:32<4:41:55, 17.37s/epoch, accuracy=0.443, loss=1.29, lr=0.002, val_accuracy=0.443, val_loss=1.29, val_lr=0.002]  3%|▎         | 27/1000 [07:49<4:40:13, 17.28s/epoch, accuracy=0.444, loss=1.29, lr=0.002, val_accuracy=0.444, val_loss=1.28, val_lr=0.002]  3%|▎         | 28/1000 [08:07<4:40:20, 17.31s/epoch, accuracy=0.444, loss=1.28, lr=0.002, val_accuracy=0.44, val_loss=1.28, val_lr=0.002]   3%|▎         | 29/1000 [08:24<4:40:48, 17.35s/epoch, accuracy=0.445, loss=1.28, lr=0.002, val_accuracy=0.442, val_loss=1.29, val_lr=0.002]  3%|▎         | 30/1000 [08:41<4:40:38, 17.36s/epoch, accuracy=0.445, loss=1.28, lr=0.002, val_accuracy=0.443, val_loss=1.28, val_lr=0.002]  3%|▎         | 31/1000 [08:59<4:39:27, 17.30s/epoch, accuracy=0.446, loss=1.28, lr=0.002, val_accuracy=0.445, val_loss=1.3, val_lr=0.002]   3%|▎         | 32/1000 [09:16<4:40:04, 17.36s/epoch, accuracy=0.446, loss=1.28, lr=0.002, val_accuracy=0.446, val_loss=1.28, val_lr=0.002]  3%|▎         | 33/1000 [09:34<4:40:00, 17.37s/epoch, accuracy=0.447, loss=1.28, lr=0.002, val_accuracy=0.446, val_loss=1.28, val_lr=0.002]  3%|▎         | 34/1000 [09:51<4:39:03, 17.33s/epoch, accuracy=0.447, loss=1.28, lr=0.002, val_accuracy=0.445, val_loss=1.28, val_lr=0.002]  4%|▎         | 35/1000 [10:08<4:38:50, 17.34s/epoch, accuracy=0.447, loss=1.28, lr=0.002, val_accuracy=0.443, val_loss=1.29, val_lr=0.002]  4%|▎         | 36/1000 [10:26<4:39:19, 17.39s/epoch, accuracy=0.448, loss=1.28, lr=0.002, val_accuracy=0.448, val_loss=1.28, val_lr=0.002]  4%|▎         | 37/1000 [10:43<4:39:12, 17.40s/epoch, accuracy=0.449, loss=1.28, lr=0.002, val_accuracy=0.427, val_loss=1.29, val_lr=0.002]  4%|▍         | 38/1000 [11:00<4:37:29, 17.31s/epoch, accuracy=0.448, loss=1.28, lr=0.002, val_accuracy=0.45, val_loss=1.28, val_lr=0.002]   4%|▍         | 39/1000 [11:18<4:37:49, 17.35s/epoch, accuracy=0.449, loss=1.28, lr=0.002, val_accuracy=0.446, val_loss=1.29, val_lr=0.002]  4%|▍         | 40/1000 [11:35<4:37:37, 17.35s/epoch, accuracy=0.45, loss=1.28, lr=0.002, val_accuracy=0.434, val_loss=1.28, val_lr=0.002]   4%|▍         | 41/1000 [11:52<4:37:29, 17.36s/epoch, accuracy=0.45, loss=1.28, lr=0.002, val_accuracy=0.451, val_loss=1.28, val_lr=0.002]  4%|▍         | 42/1000 [12:10<4:37:24, 17.37s/epoch, accuracy=0.45, loss=1.28, lr=0.002, val_accuracy=0.453, val_loss=1.28, val_lr=0.002]  4%|▍         | 43/1000 [12:27<4:37:22, 17.39s/epoch, accuracy=0.451, loss=1.28, lr=0.002, val_accuracy=0.449, val_loss=1.28, val_lr=0.002]  4%|▍         | 44/1000 [12:45<4:36:57, 17.38s/epoch, accuracy=0.451, loss=1.28, lr=0.002, val_accuracy=0.451, val_loss=1.28, val_lr=0.002]  4%|▍         | 45/1000 [13:02<4:36:15, 17.36s/epoch, accuracy=0.451, loss=1.28, lr=0.002, val_accuracy=0.446, val_loss=1.28, val_lr=0.002]  5%|▍         | 46/1000 [13:19<4:34:50, 17.29s/epoch, accuracy=0.452, loss=1.28, lr=0.002, val_accuracy=0.454, val_loss=1.27, val_lr=0.002]  5%|▍         | 47/1000 [13:36<4:33:52, 17.24s/epoch, accuracy=0.452, loss=1.28, lr=0.002, val_accuracy=0.456, val_loss=1.28, val_lr=0.002]  5%|▍         | 48/1000 [13:53<4:34:10, 17.28s/epoch, accuracy=0.452, loss=1.28, lr=0.002, val_accuracy=0.447, val_loss=1.28, val_lr=0.002]  5%|▍         | 49/1000 [14:11<4:33:28, 17.25s/epoch, accuracy=0.452, loss=1.28, lr=0.002, val_accuracy=0.448, val_loss=1.29, val_lr=0.002]  5%|▌         | 50/1000 [14:28<4:33:43, 17.29s/epoch, accuracy=0.453, loss=1.28, lr=0.002, val_accuracy=0.451, val_loss=1.27, val_lr=0.002]  5%|▌         | 51/1000 [14:45<4:33:45, 17.31s/epoch, accuracy=0.453, loss=1.27, lr=0.002, val_accuracy=0.452, val_loss=1.27, val_lr=0.002]  5%|▌         | 52/1000 [15:03<4:33:20, 17.30s/epoch, accuracy=0.453, loss=1.27, lr=0.002, val_accuracy=0.456, val_loss=1.27, val_lr=0.002]  5%|▌         | 53/1000 [15:20<4:33:36, 17.34s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.453, val_loss=1.27, val_lr=0.002]  5%|▌         | 54/1000 [15:38<4:33:43, 17.36s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.457, val_loss=1.28, val_lr=0.002]  6%|▌         | 55/1000 [15:55<4:31:48, 17.26s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.454, val_loss=1.27, val_lr=0.002]  6%|▌         | 56/1000 [16:12<4:30:29, 17.19s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.455, val_loss=1.27, val_lr=0.002]  6%|▌         | 57/1000 [16:29<4:30:56, 17.24s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.456, val_loss=1.28, val_lr=0.002]  6%|▌         | 58/1000 [16:46<4:29:58, 17.20s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.457, val_loss=1.27, val_lr=0.002]  6%|▌         | 59/1000 [17:03<4:30:38, 17.26s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.455, val_loss=1.27, val_lr=0.002]  6%|▌         | 60/1000 [17:21<4:30:51, 17.29s/epoch, accuracy=0.455, loss=1.27, lr=0.002, val_accuracy=0.436, val_loss=1.28, val_lr=0.002]  6%|▌         | 61/1000 [17:38<4:30:56, 17.31s/epoch, accuracy=0.455, loss=1.27, lr=0.002, val_accuracy=0.456, val_loss=1.27, val_lr=0.002]  6%|▌         | 62/1000 [17:56<4:30:56, 17.33s/epoch, accuracy=0.454, loss=1.27, lr=0.002, val_accuracy=0.433, val_loss=1.28, val_lr=0.002]  6%|▋         | 63/1000 [18:13<4:30:43, 17.34s/epoch, accuracy=0.455, loss=1.27, lr=0.002, val_accuracy=0.45, val_loss=1.29, val_lr=0.002]   6%|▋         | 64/1000 [18:30<4:29:46, 17.29s/epoch, accuracy=0.455, loss=1.27, lr=0.002, val_accuracy=0.453, val_loss=1.28, val_lr=0.002]  6%|▋         | 65/1000 [18:47<4:29:32, 17.30s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.455, val_loss=1.27, val_lr=0.0002]  7%|▋         | 66/1000 [19:05<4:29:43, 17.33s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.456, val_loss=1.27, val_lr=0.0002]  7%|▋         | 67/1000 [19:22<4:30:01, 17.37s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.455, val_loss=1.27, val_lr=0.0002]  7%|▋         | 68/1000 [19:39<4:28:43, 17.30s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.455, val_loss=1.27, val_lr=0.0002]  7%|▋         | 69/1000 [19:57<4:29:00, 17.34s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.456, val_loss=1.27, val_lr=0.0002]  7%|▋         | 70/1000 [20:14<4:28:48, 17.34s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.455, val_loss=1.27, val_lr=0.0002]  7%|▋         | 71/1000 [20:31<4:28:32, 17.34s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.456, val_loss=1.27, val_lr=0.0002]  7%|▋         | 72/1000 [20:49<4:28:06, 17.33s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.457, val_loss=1.27, val_lr=0.0002]  7%|▋         | 73/1000 [21:06<4:27:44, 17.33s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.455, val_loss=1.27, val_lr=0.0002]  7%|▋         | 74/1000 [21:24<4:27:58, 17.36s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.456, val_loss=1.27, val_lr=0.0002]  7%|▋         | 74/1000 [21:24<4:27:48, 17.35s/epoch, accuracy=0.456, loss=1.27, lr=0.0002, val_accuracy=0.456, val_loss=1.27, val_lr=0.0002]
